// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: azVx9DM13tZbR2SGxpPJBW
// Component: jSktf8A0ArUU
import * as React from "react"

import { Link, GatsbyLinkProps as LinkProps } from "gatsby"

import * as p from "@plasmicapp/react-web"

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants,
} from "@plasmicapp/react-web"
import Header from "../../Header" // plasmic-import: RwQZi7eZFd/component
import MobileNavigation from "../../MobileNavigation" // plasmic-import: QxisHOJ3lBN/component
import Section from "../../Section" // plasmic-import: WybYbYmXYd/component
import NavItem from "../../NavItem" // plasmic-import: 6Hw2GdZg4E/component

import { LanguageValue, useLanguage } from "./PlasmicGlobalVariant__Language" // plasmic-import: IK06cfUF8p/globalVariant
import { useScreenVariants } from "./PlasmicGlobalVariant__Screen" // plasmic-import: MpD2J1nj9GPB/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css"
import * as defaultcss from "../plasmic__default_style.module.css" // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_underhand.module.css" // plasmic-import: azVx9DM13tZbR2SGxpPJBW/projectcss
import * as sty from "./PlasmicHome.module.css" // plasmic-import: jSktf8A0ArUU/css

import MenusvgIcon from "./icons/PlasmicIcon__Menusvg" // plasmic-import: X92WVhKAn/icon
import PhonesvgIcon from "./icons/PlasmicIcon__Phonesvg" // plasmic-import: BvGoZqD6m/icon
import WhiskeysvgIcon from "./icons/PlasmicIcon__Whiskeysvg" // plasmic-import: iw-Wt1o3f/icon
import TraysvgIcon from "./icons/PlasmicIcon__Traysvg" // plasmic-import: Dy0n5Dy_a/icon
import LocationIcon from "./icons/PlasmicIcon__Location" // plasmic-import: cBPVv-cl4/icon
import Instagram2SvgIcon from "./icons/PlasmicIcon__Instagram2Svg" // plasmic-import: 9tosiFRmf/icon
import FacebooksvgIcon from "./icons/PlasmicIcon__Facebooksvg" // plasmic-import: Flw25NYGX/icon
import introYicp3LgS from "./images/intro.jpeg" // plasmic-import: Yicp3Lg_S/picture
import meetjpgZpDg6NFg from "./images/meetjpg.jpeg" // plasmic-import: ZPDg6n-FG/picture
import cocktailjpgRFdkfObjp from "./images/cocktailjpg.jpeg" // plasmic-import: rFDKFObjp/picture
import foodjpgN0XjTwSQv from "./images/foodjpg.jpeg" // plasmic-import: N0xjTwSQv/picture
import ntbFeelFqLvwmDjh from "./images/ntbFeel.png" // plasmic-import: fqLvwmDJH/picture
import namtrebaBurgersLogoEnYzwnINd from "./images/namtrebaBurgersLogo.png" // plasmic-import: ENYzwnINd/picture

export type PlasmicHome__VariantMembers = {}

export type PlasmicHome__VariantsArgs = {}
type VariantPropType = keyof PlasmicHome__VariantsArgs
export const PlasmicHome__VariantProps = new Array<VariantPropType>()

export type PlasmicHome__ArgsType = {}
type ArgPropType = keyof PlasmicHome__ArgsType
export const PlasmicHome__ArgProps = new Array<ArgPropType>()

export type PlasmicHome__OverridesType = {
  root?: p.Flex<"div">
  header?: p.Flex<typeof Header>
  mainNav?: p.Flex<typeof MobileNavigation>
  title?: p.Flex<"h1">
  subtitle?: p.Flex<"h1">
  footerNavigation?: p.Flex<"div">
  location?: p.Flex<typeof NavItem>
  phone?: p.Flex<typeof NavItem>
  instagram?: p.Flex<typeof NavItem>
  facebook?: p.Flex<typeof NavItem>
  menu?: p.Flex<typeof NavItem>
  book2?: p.Flex<typeof NavItem>
  event?: p.Flex<typeof NavItem>
  delivery2?: p.Flex<typeof NavItem>
  partners?: p.Flex<typeof NavItem>
}

export interface DefaultHomeProps {
  className?: string
}

function PlasmicHome__RenderFunc(props: {
  variants: PlasmicHome__VariantsArgs
  args: PlasmicHome__ArgsType
  overrides: PlasmicHome__OverridesType
  dataFetches?: PlasmicHome__Fetches
  forNode?: string
}) {
  const { variants, args, overrides, forNode, dataFetches } = props

  const globalVariants = ensureGlobalVariants({
    language: useLanguage(),
    screen: useScreenVariants(),
  })

  return (
    <React.Fragment>
      {}

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={defaultcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            defaultcss.all,
            projectcss.root_reset,
            sty.root,
            {
              [sty.root__global_language_en]: hasVariant(
                globalVariants,
                "language",
                "en"
              ),
              [sty.root__global_language_ru]: hasVariant(
                globalVariants,
                "language",
                "ru"
              ),
            }
          )}
        >
          <Header
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            className={classNames("__wab_instance", sty.header)}
          />

          {(hasVariant(globalVariants, "screen", "sm") ? true : true) ? (
            <MobileNavigation
              data-plasmic-name={"mainNav"}
              data-plasmic-override={overrides.mainNav}
              className={classNames("__wab_instance", sty.mainNav)}
            />
          ) : null}

          <h1
            data-plasmic-name={"title"}
            data-plasmic-override={overrides.title}
            className={classNames(
              defaultcss.h1,
              defaultcss.__wab_text,
              sty.title
            )}
          >
            {"Underhand"}
          </h1>

          <h1
            data-plasmic-name={"subtitle"}
            data-plasmic-override={overrides.subtitle}
            className={classNames(
              defaultcss.h1,
              defaultcss.__wab_text,
              sty.subtitle
            )}
          >
            {"Speakeasy бар \nзахований в серці троєщини"}
          </h1>

          <div
            className={classNames(defaultcss.all, sty.freeBox__kfXle)}
            id={"navigation" as const}
          >
            <img
              alt={""}
              className={classNames(defaultcss.img, sty.img__s6CdJ)}
              src={introYicp3LgS}
            />
          </div>

          {true ? (
            <Section
              className={classNames("__wab_instance", sty.section___8Yd9Z)}
              content={
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.freeBox__zjVkR)}
                >
                  {(
                    hasVariant(globalVariants, "screen", "sm") ? true : true
                  ) ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.freeBox__kvsPa)}
                    >
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.text__vv9K
                        )}
                      >
                        {"Історія cтворення"}
                      </div>

                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.text__xxtEj
                        )}
                      >
                        {"Культура \nі цінності"}
                      </div>

                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.text__bMrek
                        )}
                      >
                        {"Плани на майбутнє"}
                      </div>
                    </p.Stack>
                  ) : null}

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text___30FBs
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "lg")
                      ? "Ми цінуємо людину і спілкування  — \nхочемо, аби у тебе була можливість  знайти для себе місце, де можеш не соромитись, бути свіжим, спілкуватись без перешкод, зустрічати цікавих людей, дізнаватись щось нове про когось і головне — про себе"
                      : "Ми цінуємо людину і спілкування  — \nхочемо, аби у тебе була можливість  знайти для себе місце, де можеш не соромитись, бути свіжим, спілкуватись без перешкод, зустрічати цікавих людей, дізнаватись щось нове про когось і головне — про себе"}
                  </div>
                </p.Stack>
              }
              contentFooter={
                <React.Fragment>
                  <NavItem
                    className={classNames("__wab_instance", sty.navItem__aZklJ)}
                    destination={"/menu" as const}
                    icon={
                      <MenusvgIcon
                        className={classNames(defaultcss.all, sty.svg__tosrN)}
                        role={"img"}
                      />
                    }
                    label={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.text__qahQn
                        )}
                      >
                        {"меню"}
                      </div>
                    }
                  />

                  <NavItem
                    className={classNames("__wab_instance", sty.navItem__dDEp)}
                    destination={"#contacts" as const}
                    icon={
                      <PhonesvgIcon
                        className={classNames(defaultcss.all, sty.svg__gHc4V)}
                        role={"img"}
                      />
                    }
                    label={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.text__jp1Sy
                        )}
                      >
                        {"Контакти"}
                      </div>
                    }
                  />
                </React.Fragment>
              }
              thumbnail={
                <img
                  alt={""}
                  className={classNames(defaultcss.img, sty.img___8PwXg)}
                  src={
                    hasVariant(globalVariants, "screen", "lg")
                      ? meetjpgZpDg6NFg
                      : meetjpgZpDg6NFg
                  }
                />
              }
              title={
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.text__b4T1C
                  )}
                >
                  {"Хто такі Underhand"}
                </div>
              }
            />
          ) : null}

          <Section
            className={classNames("__wab_instance", sty.section__zzxZ)}
            contentFooter={
              <React.Fragment>
                {false ? (
                  <NavItem
                    className={classNames("__wab_instance")}
                    icon={
                      <WhiskeysvgIcon
                        className={classNames(defaultcss.all, sty.svg__dTou)}
                        role={"img"}
                      />
                    }
                    label={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.text___393No
                        )}
                      >
                        {"більше про коктейлі"}
                      </div>
                    }
                  />
                ) : null}

                <NavItem
                  className={classNames("__wab_instance", sty.navItem__ndP4)}
                  destination={"/menu" as const}
                  icon={
                    <MenusvgIcon
                      className={classNames(defaultcss.all, sty.svg___2Be7Q)}
                      role={"img"}
                    />
                  }
                  label={
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.text__bBtZx
                      )}
                    >
                      {"меню"}
                    </div>
                  }
                />

                <NavItem
                  className={classNames("__wab_instance", sty.navItem___00KTs)}
                  destination={"#contacts" as const}
                  icon={
                    <PhonesvgIcon
                      className={classNames(defaultcss.all, sty.svg__unC0D)}
                      role={"img"}
                    />
                  }
                  label={
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.text__rRcda
                      )}
                    >
                      {"Контакти"}
                    </div>
                  }
                />
              </React.Fragment>
            }
            thumbnail={
              <img
                alt={""}
                className={classNames(defaultcss.img, sty.img__aOdB)}
                src={cocktailjpgRFdkfObjp}
              />
            }
            title={
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.text__hktQp
                )}
              >
                {"Коктейлі в тренді"}
              </div>
            }
          />

          {(hasVariant(globalVariants, "screen", "md") ? true : true) ? (
            <Section
              className={classNames("__wab_instance", sty.section__tymne)}
              content={
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.text__siNBn
                  )}
                >
                  {
                    "А що смакує до куртого коктейлю і цікавої історії краще, ніж смачнюча їжа? \n\nПравильно! Багато смачнючої їжі!\n\nВи отримуєте вибух смаків, адже ми дуже відповідально ставимось до вибору продуктів з яких готуємо, ми дуже прискіпливо ставимось до поєднання смаків у стравах, та взагалі до формування меню. \n\nОбирайте і насолоджуйтесь! "
                  }
                </div>
              }
              contentFooter={
                <React.Fragment>
                  <NavItem
                    className={classNames(
                      "__wab_instance",
                      sty.navItem___8V7Tz
                    )}
                    destination={"/menu" as const}
                    icon={
                      <MenusvgIcon
                        className={classNames(defaultcss.all, sty.svg__fzhgz)}
                        role={"img"}
                      />
                    }
                    label={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.text__jtqRw
                        )}
                      >
                        {"меню"}
                      </div>
                    }
                  />

                  {false ? (
                    <NavItem
                      className={classNames(
                        "__wab_instance",
                        sty.navItem__dbxWv
                      )}
                      destination={"#contacts" as const}
                      icon={
                        <PhonesvgIcon
                          className={classNames(
                            defaultcss.all,
                            sty.svg___0UVbd
                          )}
                          role={"img"}
                        />
                      }
                      label={
                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.text__sqZHz
                          )}
                        >
                          {"Контакти"}
                        </div>
                      }
                    />
                  ) : null}
                  {false ? (
                    <NavItem
                      className={classNames(
                        "__wab_instance",
                        sty.navItem__y0ODr
                      )}
                      icon={
                        <TraysvgIcon
                          className={classNames(defaultcss.all, sty.svg__fKoa)}
                          role={"img"}
                        />
                      }
                      label={
                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.text__u3DWz
                          )}
                        >
                          {"більше про Страви"}
                        </div>
                      }
                    />
                  ) : null}
                </React.Fragment>
              }
              thumbnail={
                <img
                  alt={""}
                  className={classNames(defaultcss.img, sty.img___519DX)}
                  src={foodjpgN0XjTwSQv}
                />
              }
              title={
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.text__w9LdL
                  )}
                >
                  {"СМАЧНЮЩІ страви"}
                </div>
              }
            />
          ) : null}
          {false ? (
            <Section
              className={classNames("__wab_instance", sty.section__ntj1P)}
              content={
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.text__khCoe
                  )}
                >
                  {
                    "Ти вже зрозумів, що немає ніяких шансів скуштувати щось не смачне в Underhand.\n\nА для того, щоб ти міг тішити себе і вдома, ми створили окрему службу доставки — \n«Нам треба». \n\nЇжа якісно запаковується і доставляється до твоєї оселі максимально швидко."
                  }
                </div>
              }
              contentFooter={
                <NavItem
                  className={classNames("__wab_instance", sty.navItem__q451)}
                  icon={
                    <img
                      alt={""}
                      className={classNames(defaultcss.img, sty.img__olnxq)}
                      src={namtrebaBurgersLogoEnYzwnINd}
                    />
                  }
                  label={
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.text__yGgC
                      )}
                    >
                      {"замовляй доставку\nна namtreba.com"}
                    </div>
                  }
                />
              }
              thumbnail={
                <img
                  alt={""}
                  className={classNames(defaultcss.img, sty.img__fhnH0)}
                  src={ntbFeelFqLvwmDjh}
                />
              }
              title={
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.text___0QnGd
                  )}
                >
                  {"доставка бургерів"}
                </div>
              }
            />
          ) : null}
          {true ? (
            <div
              data-plasmic-name={"footerNavigation"}
              data-plasmic-override={overrides.footerNavigation}
              className={classNames(defaultcss.all, sty.footerNavigation)}
            >
              <NavItem
                data-plasmic-name={"location"}
                data-plasmic-override={overrides.location}
                className={classNames("__wab_instance", sty.location)}
                destination={"https://g.page/Underhandbar?share" as const}
                icon={
                  <LocationIcon
                    className={classNames(defaultcss.all, sty.svg__bCi1O)}
                    role={"img"}
                  />
                }
                label={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__e6FVf
                    )}
                  >
                    {"вул. Архітектора Ніколаєва, 7а"}
                  </div>
                }
              />

              <NavItem
                data-plasmic-name={"phone"}
                data-plasmic-override={overrides.phone}
                className={classNames("__wab_instance", sty.phone)}
                destination={"tel:+380981763618" as const}
                icon={
                  <PhonesvgIcon
                    className={classNames(defaultcss.all, sty.svg__sjvL6)}
                    role={"img"}
                  />
                }
                label={"+38 (098) 176 36 18"}
              />

              <NavItem
                data-plasmic-name={"instagram"}
                data-plasmic-override={overrides.instagram}
                className={classNames("__wab_instance", sty.instagram)}
                destination={"https://instagram.com/underhand.bar" as const}
                icon={
                  <Instagram2SvgIcon
                    className={classNames(defaultcss.all, sty.svg__iiGr1)}
                    role={"img"}
                  />
                }
                label={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__per0M
                    )}
                  >
                    {"@underhand.bar"}
                  </div>
                }
              />

              <NavItem
                data-plasmic-name={"facebook"}
                data-plasmic-override={overrides.facebook}
                className={classNames("__wab_instance", sty.facebook)}
                destination={"https://www.facebook.com/underhand.bar" as const}
                icon={
                  <FacebooksvgIcon
                    className={classNames(defaultcss.all, sty.svg__f2Oj1)}
                    role={"img"}
                  />
                }
                label={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__abEqo
                    )}
                  >
                    {"@underhand.bar"}
                  </div>
                }
              />

              {false ? (
                <NavItem
                  data-plasmic-name={"menu"}
                  data-plasmic-override={overrides.menu}
                  className={classNames("__wab_instance", sty.menu)}
                  icon={
                    <MenusvgIcon
                      className={classNames(defaultcss.all, sty.svg__kfRtk)}
                      role={"img"}
                    />
                  }
                  label={
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.text__iq5Zr
                      )}
                    >
                      {"меню"}
                    </div>
                  }
                />
              ) : null}
              {false ? (
                <NavItem
                  data-plasmic-name={"book2"}
                  data-plasmic-override={overrides.book2}
                  className={classNames("__wab_instance", sty.book2)}
                  icon={
                    <MenusvgIcon
                      className={classNames(defaultcss.all, sty.svg__fsKm)}
                      role={"img"}
                    />
                  }
                  label={
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.text__qbttA
                      )}
                    >
                      {"забронювати стіл"}
                    </div>
                  }
                />
              ) : null}
              {false ? (
                <NavItem
                  data-plasmic-name={"event"}
                  data-plasmic-override={overrides.event}
                  className={classNames("__wab_instance", sty.event)}
                  icon={
                    <MenusvgIcon
                      className={classNames(defaultcss.all, sty.svg___82Fov)}
                      role={"img"}
                    />
                  }
                  label={
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.text__tLxku
                      )}
                    >
                      {"Замовити івент/тімбілдінг"}
                    </div>
                  }
                />
              ) : null}
              {false ? (
                <NavItem
                  data-plasmic-name={"delivery2"}
                  data-plasmic-override={overrides.delivery2}
                  className={classNames("__wab_instance", sty.delivery2)}
                  icon={
                    <MenusvgIcon
                      className={classNames(defaultcss.all, sty.svg__oKqHa)}
                      role={"img"}
                    />
                  }
                  label={
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.text__doPts
                      )}
                    >
                      {"замовити доставку"}
                    </div>
                  }
                />
              ) : null}
              {false ? (
                <NavItem
                  data-plasmic-name={"partners"}
                  data-plasmic-override={overrides.partners}
                  className={classNames("__wab_instance", sty.partners)}
                  icon={
                    <MenusvgIcon
                      className={classNames(defaultcss.all, sty.svg__vaa1G)}
                      role={"img"}
                    />
                  }
                  label={
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.text__tq18B
                      )}
                    >
                      {"Для партнерів"}
                    </div>
                  }
                />
              ) : null}
            </div>
          ) : null}

          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.text__auAH
            )}
          >
            {"© Underhand 2021: Всі права захищені"}
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null
}

const PlasmicDescendants = {
  root: [
    "root",
    "header",
    "mainNav",
    "title",
    "subtitle",
    "footerNavigation",
    "location",
    "phone",
    "instagram",
    "facebook",
    "menu",
    "book2",
    "event",
    "delivery2",
    "partners",
  ],
  header: ["header"],
  mainNav: ["mainNav"],
  title: ["title"],
  subtitle: ["subtitle"],
  footerNavigation: [
    "footerNavigation",
    "location",
    "phone",
    "instagram",
    "facebook",
    "menu",
    "book2",
    "event",
    "delivery2",
    "partners",
  ],
  location: ["location"],
  phone: ["phone"],
  instagram: ["instagram"],
  facebook: ["facebook"],
  menu: ["menu"],
  book2: ["book2"],
  event: ["event"],
  delivery2: ["delivery2"],
  partners: ["partners"],
} as const
type NodeNameType = keyof typeof PlasmicDescendants
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number]
type NodeDefaultElementType = {
  root: "div"
  header: typeof Header
  mainNav: typeof MobileNavigation
  title: "h1"
  subtitle: "h1"
  footerNavigation: "div"
  location: typeof NavItem
  phone: typeof NavItem
  instagram: typeof NavItem
  facebook: typeof NavItem
  menu: typeof NavItem
  book2: typeof NavItem
  event: typeof NavItem
  delivery2: typeof NavItem
  partners: typeof NavItem
}

type ReservedPropsType = "variants" | "args" | "overrides"
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHome__OverridesType,
  DescendantsType<T>
>
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHome__VariantsArgs
    args?: PlasmicHome__ArgsType
    overrides?: NodeOverridesType<T>
    dataFetches?: PlasmicHome__Fetches
  } & Omit<PlasmicHome__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHome__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key }
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHome__ArgProps,
      internalVariantPropNames: PlasmicHome__VariantProps,
    })

    const { dataFetches } = props

    return PlasmicHome__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName,
    })
  }
  if (nodeName === "root") {
    func.displayName = "PlasmicHome"
  } else {
    func.displayName = `PlasmicHome.${nodeName}`
  }
  return func
}

export const PlasmicHome = Object.assign(
  // Top-level PlasmicHome renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    mainNav: makeNodeComponent("mainNav"),
    title: makeNodeComponent("title"),
    subtitle: makeNodeComponent("subtitle"),
    footerNavigation: makeNodeComponent("footerNavigation"),
    location: makeNodeComponent("location"),
    phone: makeNodeComponent("phone"),
    instagram: makeNodeComponent("instagram"),
    facebook: makeNodeComponent("facebook"),
    menu: makeNodeComponent("menu"),
    book2: makeNodeComponent("book2"),
    event: makeNodeComponent("event"),
    delivery2: makeNodeComponent("delivery2"),
    partners: makeNodeComponent("partners"),

    // Metadata about props expected for PlasmicHome
    internalVariantProps: PlasmicHome__VariantProps,
    internalArgProps: PlasmicHome__ArgProps,
  }
)

export default PlasmicHome
/* prettier-ignore-end */
