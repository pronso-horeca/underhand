{"version":3,"file":"component---src-pages-index-tsx-e50ffacf31062e28b63e.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/plasmic/underhand/icons/PlasmicIcon__HamburgerNavigation.tsx","webpack://gatsby-starter-default/./src/components/plasmic/underhand/PlasmicHeader.tsx","webpack://gatsby-starter-default/./src/components/plasmic/underhand/PlasmicHeader.module.css","webpack://gatsby-starter-default/./src/components/Header.tsx","webpack://gatsby-starter-default/./src/components/plasmic/underhand/PlasmicGlobalVariant__Language.tsx","webpack://gatsby-starter-default/./src/components/plasmic/underhand/icons/PlasmicIcon__Facebooksvg.tsx","webpack://gatsby-starter-default/./src/components/plasmic/underhand/icons/PlasmicIcon__Instagram2Svg.tsx","webpack://gatsby-starter-default/./src/components/plasmic/underhand/PlasmicGlobalVariant__Screen.tsx","webpack://gatsby-starter-default/./src/components/plasmic/underhand/icons/PlasmicIcon__Menu.tsx","webpack://gatsby-starter-default/./src/components/plasmic/underhand/PlasmicNavItem.tsx","webpack://gatsby-starter-default/./src/components/plasmic/underhand/PlasmicNavItem.module.css","webpack://gatsby-starter-default/./src/components/NavItem.tsx","webpack://gatsby-starter-default/./src/components/plasmic/underhand/icons/PlasmicIcon__Menusvg.tsx","webpack://gatsby-starter-default/./src/components/plasmic/underhand/icons/PlasmicIcon__Teamsvg.tsx","webpack://gatsby-starter-default/./src/components/plasmic/underhand/icons/PlasmicIcon__Location.tsx","webpack://gatsby-starter-default/./src/components/plasmic/underhand/PlasmicMobileNavigation.tsx","webpack://gatsby-starter-default/./src/components/plasmic/underhand/images/namtrebaBurgersLogo.png","webpack://gatsby-starter-default/./src/components/plasmic/underhand/PlasmicMobileNavigation.module.css","webpack://gatsby-starter-default/./src/components/MobileNavigation.tsx","webpack://gatsby-starter-default/./src/components/plasmic/underhand/PlasmicSection.tsx","webpack://gatsby-starter-default/./src/components/plasmic/underhand/PlasmicSection.module.css","webpack://gatsby-starter-default/./src/components/Section.tsx","webpack://gatsby-starter-default/./src/components/plasmic/underhand/PlasmicHome.module.css","webpack://gatsby-starter-default/./src/components/plasmic/underhand/icons/PlasmicIcon__Phonesvg.tsx","webpack://gatsby-starter-default/./src/components/plasmic/underhand/images/intro.jpeg","webpack://gatsby-starter-default/./src/components/plasmic/underhand/images/meetjpg.jpeg","webpack://gatsby-starter-default/./src/components/plasmic/underhand/images/cocktailjpg.jpeg","webpack://gatsby-starter-default/./src/components/plasmic/underhand/images/foodjpg.jpeg","webpack://gatsby-starter-default/./src/components/plasmic/underhand/PlasmicHome.tsx","webpack://gatsby-starter-default/./src/components/plasmic/underhand/images/ntbFeel.png","webpack://gatsby-starter-default/./src/pages/index.tsx","webpack://gatsby-starter-default/./src/components/plasmic/plasmic__default_style.module.css","webpack://gatsby-starter-default/./src/components/plasmic/underhand/plasmic_underhand.module.css","webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport type HamburgerNavigationIconProps = React.ComponentProps<\"svg\"> & {\n  title?: string\n}\n\nexport function HamburgerNavigationIcon(props: HamburgerNavigationIconProps) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      viewBox={\"0 0 512 512\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      style={{\n        fill: \"currentcolor\",\n\n        ...(style || {}),\n      }}\n      className={classNames(\"plasmic-default__svg\", className)}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        d={\n          \"M492 236H20c-11.046 0-20 8.954-20 20s8.954 20 20 20h472c11.046 0 20-8.954 20-20s-8.954-20-20-20zm0-160H20C8.954 76 0 84.954 0 96s8.954 20 20 20h472c11.046 0 20-8.954 20-20s-8.954-20-20-20zm0 320H20c-11.046 0-20 8.954-20 20s8.954 20 20 20h472c11.046 0 20-8.954 20-20s-8.954-20-20-20z\"\n        }\n      ></path>\n    </svg>\n  )\n}\n\nexport default HamburgerNavigationIcon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: azVx9DM13tZbR2SGxpPJBW\n// Component: RwQZi7eZFd\nimport * as React from \"react\"\n\nimport { Link, GatsbyLinkProps as LinkProps } from \"gatsby\"\n\nimport * as p from \"@plasmicapp/react-web\"\n\nimport {\n  hasVariant,\n  classNames,\n  wrapWithClassName,\n  createPlasmicElementProxy,\n  makeFragment,\n  MultiChoiceArg,\n  SingleBooleanChoiceArg,\n  SingleChoiceArg,\n  pick,\n  omit,\n  useTrigger,\n  StrictProps,\n  deriveRenderOpts,\n  ensureGlobalVariants,\n} from \"@plasmicapp/react-web\"\n\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as defaultcss from \"../plasmic__default_style.module.css\" // plasmic-import: global/defaultcss\nimport * as projectcss from \"./plasmic_underhand.module.css\" // plasmic-import: azVx9DM13tZbR2SGxpPJBW/projectcss\nimport * as sty from \"./PlasmicHeader.module.css\" // plasmic-import: RwQZi7eZFd/css\n\nimport Instagram2SvgIcon from \"./icons/PlasmicIcon__Instagram2Svg\" // plasmic-import: 9tosiFRmf/icon\nimport FacebooksvgIcon from \"./icons/PlasmicIcon__Facebooksvg\" // plasmic-import: Flw25NYGX/icon\nimport HamburgerNavigationIcon from \"./icons/PlasmicIcon__HamburgerNavigation\" // plasmic-import: cwJrUItrF/icon\n\nexport type PlasmicHeader__VariantMembers = {}\n\nexport type PlasmicHeader__VariantsArgs = {}\ntype VariantPropType = keyof PlasmicHeader__VariantsArgs\nexport const PlasmicHeader__VariantProps = new Array<VariantPropType>()\n\nexport type PlasmicHeader__ArgsType = {}\ntype ArgPropType = keyof PlasmicHeader__ArgsType\nexport const PlasmicHeader__ArgProps = new Array<ArgPropType>()\n\nexport type PlasmicHeader__OverridesType = {\n  root?: p.Flex<\"div\">\n  logo?: p.Flex<\"div\">\n  freeBox?: p.Flex<\"div\">\n}\n\nexport interface DefaultHeaderProps {\n  className?: string\n}\n\nfunction PlasmicHeader__RenderFunc(props: {\n  variants: PlasmicHeader__VariantsArgs\n  args: PlasmicHeader__ArgsType\n  overrides: PlasmicHeader__OverridesType\n  dataFetches?: PlasmicHeader__Fetches\n  forNode?: string\n}) {\n  const { variants, args, overrides, forNode, dataFetches } = props\n\n  return (\n    <div\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      className={classNames(defaultcss.all, projectcss.root_reset, sty.root)}\n    >\n      <p.PlasmicLink\n        className={classNames(defaultcss.a, sty.link__gCtRw)}\n        component={Link}\n        href={\"/\" as const}\n        platform={\"gatsby\"}\n      >\n        <div\n          data-plasmic-name={\"logo\"}\n          data-plasmic-override={overrides.logo}\n          className={classNames(defaultcss.all, sty.logo)}\n        />\n      </p.PlasmicLink>\n\n      <p.Stack\n        as={\"div\"}\n        data-plasmic-name={\"freeBox\"}\n        data-plasmic-override={overrides.freeBox}\n        hasGap={true}\n        className={classNames(defaultcss.all, sty.freeBox)}\n      >\n        <p.PlasmicLink\n          className={classNames(defaultcss.a, sty.link__o6QJm)}\n          component={Link}\n          href={\"https://www.instagram.com/underhand.bar\" as const}\n          platform={\"gatsby\"}\n        >\n          <Instagram2SvgIcon\n            className={classNames(defaultcss.all, sty.svg__f34Sz)}\n            role={\"img\"}\n          />\n        </p.PlasmicLink>\n\n        <p.PlasmicLink\n          className={classNames(defaultcss.a, sty.link__tAoLp)}\n          component={Link}\n          href={\"https://www.facebook.com/underhand.bar\" as const}\n          platform={\"gatsby\"}\n        >\n          <FacebooksvgIcon\n            className={classNames(defaultcss.all, sty.svg__myvNy)}\n            role={\"img\"}\n          />\n        </p.PlasmicLink>\n      </p.Stack>\n\n      {false ? (\n        <p.PlasmicLink\n          className={classNames(defaultcss.a, sty.link__aeRgg)}\n          component={Link}\n          href={\"#navigation\" as const}\n          platform={\"gatsby\"}\n        >\n          <HamburgerNavigationIcon\n            className={classNames(defaultcss.all, sty.svg__jV1R)}\n            role={\"img\"}\n          />\n        </p.PlasmicLink>\n      ) : null}\n    </div>\n  ) as React.ReactElement | null\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"logo\", \"freeBox\"],\n  logo: [\"logo\"],\n  freeBox: [\"freeBox\"],\n} as const\ntype NodeNameType = keyof typeof PlasmicDescendants\ntype DescendantsType<T extends NodeNameType> =\n  typeof PlasmicDescendants[T][number]\ntype NodeDefaultElementType = {\n  root: \"div\"\n  logo: \"div\"\n  freeBox: \"div\"\n}\n\ntype ReservedPropsType = \"variants\" | \"args\" | \"overrides\"\ntype NodeOverridesType<T extends NodeNameType> = Pick<\n  PlasmicHeader__OverridesType,\n  DescendantsType<T>\n>\ntype NodeComponentProps<T extends NodeNameType> =\n  // Explicitly specify variants, args, and overrides as objects\n  {\n    variants?: PlasmicHeader__VariantsArgs\n    args?: PlasmicHeader__ArgsType\n    overrides?: NodeOverridesType<T>\n    dataFetches?: PlasmicHeader__Fetches\n  } & Omit<PlasmicHeader__VariantsArgs, ReservedPropsType> & // Specify variants directly as props\n    // Specify args directly as props\n    Omit<PlasmicHeader__ArgsType, ReservedPropsType> &\n    // Specify overrides for each element directly as props\n    Omit<\n      NodeOverridesType<T>,\n      ReservedPropsType | VariantPropType | ArgPropType\n    > &\n    // Specify props for the root element\n    Omit<\n      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,\n      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>\n    >\n\nfunction makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {\n  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key }\n  const func = function <T extends PropsType>(\n    props: T & StrictProps<T, PropsType>\n  ) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicHeader__ArgProps,\n      internalVariantPropNames: PlasmicHeader__VariantProps,\n    })\n\n    const { dataFetches } = props\n\n    return PlasmicHeader__RenderFunc({\n      variants,\n      args,\n      overrides,\n      dataFetches,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicHeader\"\n  } else {\n    func.displayName = `PlasmicHeader.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicHeader = Object.assign(\n  // Top-level PlasmicHeader renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    logo: makeNodeComponent(\"logo\"),\n    freeBox: makeNodeComponent(\"freeBox\"),\n\n    // Metadata about props expected for PlasmicHeader\n    internalVariantProps: PlasmicHeader__VariantProps,\n    internalArgProps: PlasmicHeader__ArgProps,\n  }\n)\n\nexport default PlasmicHeader\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var root = \"PlasmicHeader-module--root--34_yZ\";\nexport var link__gCtRw = \"PlasmicHeader-module--link__gCtRw--yrD4L\";\nexport var logo = \"PlasmicHeader-module--logo--3xt6p\";\nexport var freeBox = \"PlasmicHeader-module--freeBox--3Fv0b\";\nexport var link__o6QJm = \"PlasmicHeader-module--link__o6QJm--1dyLI\";\nexport var svg__f34Sz = \"PlasmicHeader-module--svg__f34Sz--3yKrj\";\nexport var link__tAoLp = \"PlasmicHeader-module--link__tAoLp--2jnLB\";\nexport var svg__myvNy = \"PlasmicHeader-module--svg__myvNy--255vM\";\nexport var link__aeRgg = \"PlasmicHeader-module--link__aeRgg--20ZEZ\";\nexport var svg__jV1R = \"PlasmicHeader-module--svg__jV1R--1xqLT\";","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport {\n  PlasmicHeader,\n  DefaultHeaderProps,\n} from \"./plasmic/underhand/PlasmicHeader\"\nimport { HTMLElementRefOf } from \"@plasmicapp/react-web\"\n\n// Your component props start with props for variants and slots you defined\n// in Plasmic, but you can add more here, like event handlers that you can\n// attach to named nodes in your component.\n//\n// If you don't want to expose certain variants or slots as a prop, you can use\n// Omit to hide them:\n//\n// interface HeaderProps extends Omit<DefaultHeaderProps, \"hideProps1\"|\"hideProp2\"> {\n//   // etc.\n// }\n//\n// You can also stop extending from DefaultHeaderProps altogether and have\n// total control over the props for your component.\ninterface HeaderProps extends DefaultHeaderProps {}\n\nfunction Header_(props: HeaderProps, ref: HTMLElementRefOf<\"div\">) {\n  // Use PlasmicHeader to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicHeader are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all HeaderProps here, but feel free\n  // to do whatever works for you.\n\n  return <PlasmicHeader root={{ ref }} {...props} />\n}\n\nconst Header = React.forwardRef(Header_)\nexport default Header\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\nexport type LanguageValue = \"ru\" | \"en\"\nexport const LanguageContext = React.createContext<LanguageValue | undefined>(\n  \"PLEASE_RENDER_INSIDE_PROVIDER\" as any\n)\n\nexport function useLanguage() {\n  return React.useContext(LanguageContext)\n}\n\nexport default LanguageContext\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport type FacebooksvgIconProps = React.ComponentProps<\"svg\"> & {\n  title?: string\n}\n\nexport function FacebooksvgIcon(props: FacebooksvgIconProps) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      viewBox={\"0 0 508 508\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      style={{\n        fill: \"currentcolor\",\n\n        ...(style || {}),\n      }}\n      className={classNames(\"plasmic-default__svg\", className)}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        d={\n          \"M329.744 187.804a4.004 4.004 0 00-2.952-1.3h-44.984V166.66c0-10.988 7.024-11.84 9.176-11.84h34.444c2.208 0 4-1.792 4-4V98.212a3.998 3.998 0 00-3.984-4l-48.82-.196c-51.816 0-70.276 35.844-70.276 69.388v23.104h-23.776c-2.208 0-4 1.792-4 4V254c0 2.208 1.792 4 4 4h27.748v150.76c0 2.208 1.792 4 4 4h59.52c2.208 0 4-1.788 4-4v-35.716c0-2.208-1.792-4-4-4s-4 1.792-4 4v31.716h-51.52V254c0-2.208-1.792-4-4-4h-27.748v-55.488h23.776c2.208 0 4-1.792 4-4v-27.104c0-58.428 51.876-61.388 62.26-61.388l44.82.18v44.624h-30.444c-8.548 0-17.176 6.136-17.176 19.84v23.844c0 2.208 1.792 4 4 4h44.612L317.448 250H273.84c-2.208 0-4 1.792-4 4v51.588c0 2.208 1.792 4 4 4s4-1.792 4-4V258h43.264c2.072 0 3.8-1.58 3.984-3.648l5.688-63.492a3.989 3.989 0 00-1.032-3.056z\"\n        }\n      ></path>\n\n      <path\n        d={\n          \"M378.764 0H129.18C57.952 0 0 57.964 0 129.212v249.576C0 450.036 57.952 508 129.18 508h249.584C450.024 508 508 450.036 508 378.788V129.212C508 57.964 450.024 0 378.764 0zM500 378.788C500 445.624 445.612 500 378.764 500H129.18C62.36 500 8 445.624 8 378.788V129.212C8 62.376 62.36 8 129.18 8h249.584C445.616 8 500 62.376 500 129.212v249.576z\"\n        }\n      ></path>\n\n      <path\n        d={\n          \"M480.192 253.968c-2.208 0-4 1.792-4 4v112.02c0 57.568-48.632 106.204-106.2 106.204H138.004c-57.564 0-106.196-48.636-106.196-106.204V138c0-57.564 48.632-106.192 106.196-106.188H369.08c2.208 0 4-1.792 4-4s-1.792-4-4-4H138.004c-61.9 0-114.196 52.292-114.196 114.188v231.988c0 61.904 52.296 114.204 114.196 114.204h231.988c61.904 0 114.2-52.3 114.2-114.208V257.968c0-2.208-1.792-4-4-4z\"\n        }\n      ></path>\n\n      <path\n        d={\n          \"M449.808 58.188c-21.848-21.848-51.272-34.38-80.732-34.38-2.208 0-4 1.792-4 4s1.792 4 4 4c27.356 0 54.72 11.676 75.076 32.036.78.78 1.804 1.172 2.828 1.172s2.048-.392 2.828-1.172a3.996 3.996 0 000-5.656zm30.384 108.48c-2.208 0-4 1.792-4 4v59.524c0 2.208 1.792 4 4 4s4-1.792 4-4v-59.524c0-2.208-1.792-4-4-4z\"\n        }\n      ></path>\n    </svg>\n  )\n}\n\nexport default FacebooksvgIcon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport type Instagram2SvgIconProps = React.ComponentProps<\"svg\"> & {\n  title?: string\n}\n\nexport function Instagram2SvgIcon(props: Instagram2SvgIconProps) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      viewBox={\"0 0 508 508\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      style={{\n        fill: \"currentcolor\",\n\n        ...(style || {}),\n      }}\n      className={classNames(\"plasmic-default__svg\", className)}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        d={\n          \"M378.756 0h-249.58C57.948 0 0 57.964 0 129.216v249.572C0 450.036 57.948 508 129.176 508h249.58C450.02 508 508 450.036 508 378.792V129.216C508 57.964 450.02 0 378.756 0zM500 378.792c0 66.836-54.392 121.212-121.244 121.212h-249.58C62.36 500.004 8 445.628 8 378.792V129.216C8 62.376 62.36 8 129.176 8h249.58C445.612 8 500 62.376 500 129.216v249.576z\"\n        }\n      ></path>\n\n      <path\n        d={\n          \"M480.192 253.968c-2.208 0-4 1.792-4 4v112.024c0 57.568-48.632 106.2-106.2 106.2H138.004c-57.564 0-106.196-48.632-106.196-106.2V138.008c0-57.568 48.632-106.2 106.196-106.2H369.08c2.208 0 4-1.792 4-4s-1.792-4-4-4H138.004c-61.9 0-114.196 52.296-114.196 114.2v231.984c0 61.904 52.296 114.2 114.196 114.2h231.988c61.904 0 114.2-52.296 114.2-114.2V257.968c0-2.208-1.792-4-4-4z\"\n        }\n      ></path>\n\n      <path\n        d={\n          \"M449.808 58.188c-21.852-21.848-51.28-34.38-80.732-34.38-2.208 0-4 1.792-4 4s1.792 4 4 4c27.348 0 54.712 11.676 75.076 32.036.78.78 1.804 1.172 2.828 1.172s2.048-.392 2.828-1.172a3.996 3.996 0 000-5.656zm30.384 108.48c-2.208 0-4 1.792-4 4v59.524c0 2.208 1.792 4 4 4s4-1.792 4-4v-59.524c0-2.208-1.792-4-4-4zm-178.424 52.988c-11.112-15.372-28.976-24.548-47.776-24.548-18.788 0-36.644 9.176-47.764 24.552-7.292 10.12-11.148 22-11.148 34.348 0 32.48 26.428 58.9 58.912 58.9 32.496 0 58.928-26.424 58.928-58.896 0-12.324-3.852-24.2-11.152-34.356zm-47.776 85.252c-28.072 0-50.912-22.832-50.912-50.9 0-10.66 3.332-20.92 9.636-29.668 9.612-13.3 25.044-21.236 41.276-21.236 16.244 0 31.676 7.94 41.284 21.228 6.312 8.776 9.644 19.036 9.644 29.676 0 28.068-22.844 50.9-50.928 50.9z\"\n        }\n      ></path>\n\n      <path\n        d={\n          \"M380.984 218.252h-47.976c-1.388 0-2.68.72-3.408 1.904a4.005 4.005 0 00-.16 3.904c3.56 7.04 5.86 18.844 5.86 30.08 0 44.792-36.476 81.232-81.308 81.232-44.828 0-81.3-36.428-81.3-81.2 0-11.288 2.296-23.108 5.852-30.108a4.004 4.004 0 00-.156-3.904 4.012 4.012 0 00-3.412-1.908h-47.96c-2.208 0-4 1.792-4 4v127.456c0 18.792 16.484 35.276 35.28 35.276h191.392c18.804 0 35.296-16.484 35.296-35.28V222.252c0-2.208-1.792-4-4-4zm-4 131.452c0 14.276-13.008 27.276-27.296 27.276H158.296c-14.276 0-27.28-13-27.28-27.276V226.256h37.972c-2.7 7.836-4.296 17.964-4.296 27.916 0 49.184 40.06 89.2 89.3 89.2 49.244 0 89.308-40.028 89.308-89.232 0-9.916-1.6-20.032-4.308-27.888h37.992v123.452zm-1.116-218.588c-.756-.752-1.72-.992-2.844-1.164l-52.244.18a4.002 4.002 0 00-3.988 3.992l-.12 52.868a3.994 3.994 0 004 4.008h.012l52.376-.188a3.999 3.999 0 003.988-4v-52.86a3.999 3.999 0 00-1.18-2.836zm-6.824 51.712l-44.364.16.104-44.868 44.26-.144v44.852z\"\n        }\n      ></path>\n\n      <path\n        d={\n          \"M408.764 250c-2.208 0-4 1.792-4 4v95.708c0 30.872-24.192 55.056-55.076 55.056H158.296c-30.876 0-55.06-24.184-55.06-55.056V158.3c0-30.88 24.188-55.064 55.06-55.064h191.392c31.224 0 55.684 24.452 55.684 55.672 0 2.208 1.792 4 4 4s4-1.792 4-4c0-35.704-27.972-63.672-63.684-63.672H158.296c-35.36 0-63.06 27.704-63.06 63.064v191.404c0 35.36 27.7 63.056 63.06 63.056h191.392c35.368 0 63.072-27.692 63.076-63.052V254c0-2.208-1.792-4-4-4z\"\n        }\n      ></path>\n    </svg>\n  )\n}\n\nexport default Instagram2SvgIcon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\nexport type ScreenValue = \"md\" | \"sm\" | \"lg\" | \"xl\"\nexport const ScreenContext = React.createContext<ScreenValue[] | undefined>(\n  \"PLEASE_RENDER_INSIDE_PROVIDER\" as any\n)\n\n/**\n *  @deprecated Plasmic now uses a custom hook for Screen variants, which is\n *  automatically included in your components. Please remove this provider\n *  from your code.\n */\nexport function ScreenVariantProvider(props: React.PropsWithChildren) {\n  console.warn(\n    \"DEPRECATED: Plasmic now uses a custom hook for Screen variants, which is automatically included in your components. Please remove this provider from your code.\"\n  )\n  return props.children\n}\n\nexport const useScreenVariants = p.createUseScreenVariants(true, {\n  md: \"(min-width:768px)\",\n  sm: \"(min-width:640px)\",\n  lg: \"(min-width:1024px)\",\n  xl: \"(min-width:1280px)\",\n})\n\nexport default ScreenContext\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport type MenuIconProps = React.ComponentProps<\"svg\"> & {\n  title?: string\n}\n\nexport function MenuIcon(props: MenuIconProps) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      viewBox={\"0 0 512 512\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      style={{\n        fill: \"currentcolor\",\n\n        ...(style || {}),\n      }}\n      className={classNames(\"plasmic-default__svg\", className)}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        d={\n          \"M484.86 0H27.14c-8.284 0-15 6.716-15 15v482c0 8.284 6.716 15 15 15h457.72c8.284 0 15-6.716 15-15V15c0-8.284-6.716-15-15-15zm-15 482H271v-18.706c0-8.284-6.716-15-15-15s-15 6.716-15 15V482H42.14V30H241v18.706c0 8.284 6.716 15 15 15s15-6.716 15-15V30h198.86z\"\n        }\n      ></path>\n\n      <path\n        d={\n          \"M256 93.706c-8.284 0-15 6.716-15 15v28.57c0 8.284 6.716 15 15 15s15-6.716 15-15v-28.57c0-8.285-6.716-15-15-15zm0 88.569c-8.284 0-15 6.716-15 15v28.57c0 8.284 6.716 15 15 15s15-6.716 15-15v-28.57c0-8.284-6.716-15-15-15zm0 88.57c-8.284 0-15 6.716-15 15v28.57c0 8.284 6.716 15 15 15s15-6.716 15-15v-28.57c0-8.284-6.716-15-15-15zm0 88.88c-8.284 0-15 6.716-15 15v28.57c0 8.284 6.716 15 15 15s15-6.716 15-15v-28.57c0-8.285-6.716-15-15-15zM205.625 235.43L193.25 110.096c-.758-7.676-7.214-13.526-14.927-13.526h-73.506c-7.713 0-14.169 5.85-14.927 13.526L77.516 235.43c-3.193 32.332 18.562 61.119 49.054 67.468v82.532h-19.878c-8.284 0-15 6.716-15 15s6.716 15 15 15h69.757c8.284 0 15-6.716 15-15s-6.716-15-15-15H156.57v-82.532c30.477-6.346 52.249-35.12 49.055-67.468zm-98.255 2.947l11.039-111.808h46.323l11.039 111.808c1.79 18.129-11.444 34.297-29.3 35.741h-.001a60.82 60.82 0 01-9.798 0c-17.855-1.444-31.092-17.608-29.302-35.741zM316 235.43h108.86c8.284 0 15-6.716 15-15V111.57c0-8.284-6.716-15-15-15H316c-8.284 0-15 6.716-15 15v108.86c0 8.284 6.716 15 15 15zm15-108.86h78.86v78.86H331zm-15 168.86h108.86c8.284 0 15-6.716 15-15s-6.716-15-15-15H316c-8.284 0-15 6.716-15 15s6.716 15 15 15zm0 60h108.86c8.284 0 15-6.716 15-15s-6.716-15-15-15H316c-8.284 0-15 6.716-15 15s6.716 15 15 15zm108.86 30H316c-8.284 0-15 6.716-15 15s6.716 15 15 15h108.86c8.284 0 15-6.716 15-15s-6.716-15-15-15z\"\n        }\n      ></path>\n    </svg>\n  )\n}\n\nexport default MenuIcon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: azVx9DM13tZbR2SGxpPJBW\n// Component: 6Hw2GdZg4E\nimport * as React from \"react\"\n\nimport { Link, GatsbyLinkProps as LinkProps } from \"gatsby\"\n\nimport * as p from \"@plasmicapp/react-web\"\n\nimport {\n  hasVariant,\n  classNames,\n  wrapWithClassName,\n  createPlasmicElementProxy,\n  makeFragment,\n  MultiChoiceArg,\n  SingleBooleanChoiceArg,\n  SingleChoiceArg,\n  pick,\n  omit,\n  useTrigger,\n  StrictProps,\n  deriveRenderOpts,\n  ensureGlobalVariants,\n} from \"@plasmicapp/react-web\"\n\nimport { useScreenVariants } from \"./PlasmicGlobalVariant__Screen\" // plasmic-import: MpD2J1nj9GPB/globalVariant\n\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as defaultcss from \"../plasmic__default_style.module.css\" // plasmic-import: global/defaultcss\nimport * as projectcss from \"./plasmic_underhand.module.css\" // plasmic-import: azVx9DM13tZbR2SGxpPJBW/projectcss\nimport * as sty from \"./PlasmicNavItem.module.css\" // plasmic-import: 6Hw2GdZg4E/css\n\nimport MenuIcon from \"./icons/PlasmicIcon__Menu\" // plasmic-import: pjGKTN-7w/icon\n\nexport type PlasmicNavItem__VariantMembers = {}\n\nexport type PlasmicNavItem__VariantsArgs = {}\ntype VariantPropType = keyof PlasmicNavItem__VariantsArgs\nexport const PlasmicNavItem__VariantProps = new Array<VariantPropType>()\n\nexport type PlasmicNavItem__ArgsType = {\n  label?: React.ReactNode\n  icon?: React.ReactNode\n  destination?: string | PageHref\n}\n\ntype ArgPropType = keyof PlasmicNavItem__ArgsType\nexport const PlasmicNavItem__ArgProps = new Array<ArgPropType>(\n  \"label\",\n  \"icon\",\n  \"destination\"\n)\n\nexport type PlasmicNavItem__OverridesType = {\n  root?: p.Flex<\"a\"> & Partial<LinkProps>\n  freeBox?: p.Flex<\"div\">\n}\n\nexport interface DefaultNavItemProps {\n  label?: React.ReactNode\n  icon?: React.ReactNode\n  destination?: string | PageHref\n  className?: string\n}\n\nfunction PlasmicNavItem__RenderFunc(props: {\n  variants: PlasmicNavItem__VariantsArgs\n  args: PlasmicNavItem__ArgsType\n  overrides: PlasmicNavItem__OverridesType\n  dataFetches?: PlasmicNavItem__Fetches\n  forNode?: string\n}) {\n  const { variants, args, overrides, forNode, dataFetches } = props\n\n  const globalVariants = ensureGlobalVariants({\n    screen: useScreenVariants(),\n  })\n\n  return (\n    <p.Stack\n      as={p.PlasmicLink}\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      hasGap={true}\n      className={classNames(defaultcss.a, projectcss.root_reset, sty.root)}\n      component={Link}\n      href={args.destination}\n      platform={\"gatsby\"}\n    >\n      {p.renderPlasmicSlot({\n        defaultContents: \"напої та їжа\",\n        value: args.label,\n        className: classNames(sty.slotTargetLabel),\n      })}\n\n      <div\n        data-plasmic-name={\"freeBox\"}\n        data-plasmic-override={overrides.freeBox}\n        className={classNames(defaultcss.all, sty.freeBox)}\n      >\n        {p.renderPlasmicSlot({\n          defaultContents: (\n            <MenuIcon\n              className={classNames(defaultcss.all, sty.svg__kyzOj)}\n              role={\"img\"}\n            />\n          ),\n\n          value: args.icon,\n        })}\n      </div>\n    </p.Stack>\n  ) as React.ReactElement | null\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"freeBox\"],\n  freeBox: [\"freeBox\"],\n} as const\ntype NodeNameType = keyof typeof PlasmicDescendants\ntype DescendantsType<T extends NodeNameType> =\n  typeof PlasmicDescendants[T][number]\ntype NodeDefaultElementType = {\n  root: \"a\"\n  freeBox: \"div\"\n}\n\ntype ReservedPropsType = \"variants\" | \"args\" | \"overrides\"\ntype NodeOverridesType<T extends NodeNameType> = Pick<\n  PlasmicNavItem__OverridesType,\n  DescendantsType<T>\n>\ntype NodeComponentProps<T extends NodeNameType> =\n  // Explicitly specify variants, args, and overrides as objects\n  {\n    variants?: PlasmicNavItem__VariantsArgs\n    args?: PlasmicNavItem__ArgsType\n    overrides?: NodeOverridesType<T>\n    dataFetches?: PlasmicNavItem__Fetches\n  } & Omit<PlasmicNavItem__VariantsArgs, ReservedPropsType> & // Specify variants directly as props\n    // Specify args directly as props\n    Omit<PlasmicNavItem__ArgsType, ReservedPropsType> &\n    // Specify overrides for each element directly as props\n    Omit<\n      NodeOverridesType<T>,\n      ReservedPropsType | VariantPropType | ArgPropType\n    > &\n    // Specify props for the root element\n    Omit<\n      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,\n      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>\n    >\n\nfunction makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {\n  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key }\n  const func = function <T extends PropsType>(\n    props: T & StrictProps<T, PropsType>\n  ) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicNavItem__ArgProps,\n      internalVariantPropNames: PlasmicNavItem__VariantProps,\n    })\n\n    const { dataFetches } = props\n\n    return PlasmicNavItem__RenderFunc({\n      variants,\n      args,\n      overrides,\n      dataFetches,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicNavItem\"\n  } else {\n    func.displayName = `PlasmicNavItem.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicNavItem = Object.assign(\n  // Top-level PlasmicNavItem renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    freeBox: makeNodeComponent(\"freeBox\"),\n\n    // Metadata about props expected for PlasmicNavItem\n    internalVariantProps: PlasmicNavItem__VariantProps,\n    internalArgProps: PlasmicNavItem__ArgProps,\n  }\n)\n\nexport default PlasmicNavItem\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var root = \"PlasmicNavItem-module--root--2iNrb\";\nexport var slotTargetLabel = \"PlasmicNavItem-module--slotTargetLabel--146Yq\";\nexport var freeBox = \"PlasmicNavItem-module--freeBox--1Skwk\";\nexport var svg__kyzOj = \"PlasmicNavItem-module--svg__kyzOj--3hU_w\";","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport {\n  PlasmicNavItem,\n  DefaultNavItemProps,\n} from \"./plasmic/underhand/PlasmicNavItem\"\nimport { HTMLElementRefOf } from \"@plasmicapp/react-web\"\n\n// Your component props start with props for variants and slots you defined\n// in Plasmic, but you can add more here, like event handlers that you can\n// attach to named nodes in your component.\n//\n// If you don't want to expose certain variants or slots as a prop, you can use\n// Omit to hide them:\n//\n// interface NavItemProps extends Omit<DefaultNavItemProps, \"hideProps1\"|\"hideProp2\"> {\n//   // etc.\n// }\n//\n// You can also stop extending from DefaultNavItemProps altogether and have\n// total control over the props for your component.\ninterface NavItemProps extends DefaultNavItemProps {}\n\nfunction NavItem_(props: NavItemProps, ref: HTMLElementRefOf<\"a\">) {\n  // Use PlasmicNavItem to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicNavItem are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all NavItemProps here, but feel free\n  // to do whatever works for you.\n\n  return <PlasmicNavItem root={{ ref }} {...props} />\n}\n\nconst NavItem = React.forwardRef(NavItem_)\nexport default NavItem\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport type MenusvgIconProps = React.ComponentProps<\"svg\"> & {\n  title?: string\n}\n\nexport function MenusvgIcon(props: MenusvgIconProps) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      viewBox={\"0 0 512 512\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      style={{\n        fill: \"currentcolor\",\n\n        ...(style || {}),\n      }}\n      className={classNames(\"plasmic-default__svg\", className)}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        d={\n          \"M458.917 85.664a7.5 7.5 0 00-7.5 7.5v393.691c0 5.594-4.551 10.145-10.145 10.145H70.728c-5.594 0-10.145-4.551-10.145-10.145v-68.729c0-4.143-3.358-7.5-7.5-7.5s-7.5 3.357-7.5 7.5v68.729c0 13.865 11.28 25.145 25.145 25.145h370.544c13.865 0 25.145-11.279 25.145-25.145V93.164a7.5 7.5 0 00-7.5-7.5zM441.272 0H70.728C56.863 0 45.583 11.279 45.583 25.145v357.982c0 4.143 3.358 7.5 7.5 7.5s7.5-3.357 7.5-7.5V25.145C60.583 19.551 65.134 15 70.728 15h370.544c5.594 0 10.145 4.551 10.145 10.145v33.02c0 4.143 3.358 7.5 7.5 7.5s7.5-3.357 7.5-7.5v-33.02C466.417 11.279 455.137 0 441.272 0z\"\n        }\n      ></path>\n\n      <path\n        d={\n          \"M194.656 138.497h189.458c14.514 0 26.321-11.808 26.321-26.321s-11.808-26.321-26.321-26.321H194.656c-14.514 0-26.321 11.808-26.321 26.321s11.807 26.321 26.321 26.321zm0-37.643h189.458c6.243 0 11.321 5.079 11.321 11.321s-5.079 11.321-11.321 11.321H194.656c-6.243 0-11.321-5.079-11.321-11.321s5.078-11.321 11.321-11.321zm0 137.677h189.458c14.514 0 26.321-11.808 26.321-26.321s-11.808-26.321-26.321-26.321H194.656c-14.514 0-26.321 11.808-26.321 26.321s11.807 26.321 26.321 26.321zm0-37.642h189.458c6.243 0 11.321 5.079 11.321 11.321s-5.079 11.321-11.321 11.321H194.656c-6.243 0-11.321-5.079-11.321-11.321s5.078-11.321 11.321-11.321zm0 137.676h189.458c14.514 0 26.321-11.808 26.321-26.321s-11.808-26.321-26.321-26.321H194.656c-14.514 0-26.321 11.808-26.321 26.321s11.807 26.321 26.321 26.321zm0-37.642h189.458c6.243 0 11.321 5.079 11.321 11.321s-5.079 11.321-11.321 11.321H194.656c-6.243 0-11.321-5.079-11.321-11.321s5.078-11.321 11.321-11.321zm0 137.678h189.458c14.514 0 26.321-11.808 26.321-26.321s-11.808-26.321-26.321-26.321H194.656c-14.514 0-26.321 11.808-26.321 26.321s11.807 26.321 26.321 26.321zm0-37.643h189.458c6.243 0 11.321 5.079 11.321 11.321s-5.079 11.321-11.321 11.321H194.656c-6.243 0-11.321-5.079-11.321-11.321s5.078-11.321 11.321-11.321zm-66.77-262.461c14.514 0 26.321-11.808 26.321-26.321S142.4 85.854 127.886 85.854s-26.321 11.808-26.321 26.321 11.808 26.322 26.321 26.322zm0-37.643c6.243 0 11.321 5.079 11.321 11.321s-5.079 11.321-11.321 11.321-11.321-5.079-11.321-11.321 5.079-11.321 11.321-11.321zm0 137.677c14.514 0 26.321-11.808 26.321-26.321s-11.808-26.321-26.321-26.321-26.321 11.808-26.321 26.321 11.808 26.321 26.321 26.321zm0-37.642c6.243 0 11.321 5.079 11.321 11.321s-5.079 11.321-11.321 11.321-11.321-5.079-11.321-11.321 5.079-11.321 11.321-11.321zm0 137.676c14.514 0 26.321-11.808 26.321-26.321s-11.808-26.321-26.321-26.321-26.321 11.808-26.321 26.321 11.808 26.321 26.321 26.321zm0-37.642c6.243 0 11.321 5.079 11.321 11.321s-5.079 11.321-11.321 11.321-11.321-5.079-11.321-11.321 5.079-11.321 11.321-11.321zm0 137.678c14.514 0 26.321-11.808 26.321-26.321s-11.808-26.321-26.321-26.321-26.321 11.808-26.321 26.321 11.808 26.321 26.321 26.321zm0-37.643c6.243 0 11.321 5.079 11.321 11.321s-5.079 11.321-11.321 11.321-11.321-5.079-11.321-11.321 5.079-11.321 11.321-11.321z\"\n        }\n      ></path>\n    </svg>\n  )\n}\n\nexport default MenusvgIcon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport type TeamsvgIconProps = React.ComponentProps<\"svg\"> & {\n  title?: string\n}\n\nexport function TeamsvgIcon(props: TeamsvgIconProps) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      viewBox={\"0 0 512 512\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      style={{\n        fill: \"currentcolor\",\n\n        ...(style || {}),\n      }}\n      className={classNames(\"plasmic-default__svg\", className)}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        d={\n          \"M451.72 237.26c-17.422-8.71-50.087-8.811-51.469-8.811a7.5 7.5 0 000 15c8.429.001 32.902 1.299 44.761 7.228a7.502 7.502 0 006.708-13.417z\"\n        }\n      ></path>\n\n      <path\n        d={\n          \"M489.112 344.041l-30.975-8.85a3.145 3.145 0 01-2.271-3.011v-10.339a56.368 56.368 0 007.171-5.881c10.89-10.568 16.887-24.743 16.887-39.915v-14.267l2.995-5.989a47.846 47.846 0 005.024-21.286v-38.65a7.5 7.5 0 00-7.5-7.5H408.27c-26.244 0-47.596 21.352-47.596 47.596v.447a39.78 39.78 0 004.178 17.699l3.841 7.682v12.25c0 19.414 9.567 36.833 24.058 47.315l.002 10.836c0 1.671 0 2.363-6.193 4.133l-15.114 4.318-43.721-15.898a7.491 7.491 0 00-2.044-5.742l-13.971-14.678v-24.64a90.427 90.427 0 004.344-3.789c17.625-16.52 27.733-39.844 27.733-63.991v-19.678c5.322-11.581 8.019-23.836 8.019-36.457v-80.19a7.5 7.5 0 00-7.5-7.5H232.037c-39.51 0-71.653 32.144-71.653 71.653v16.039c0 12.621 2.697 24.876 8.019 36.457v16.931c0 28.036 12.466 53.294 32.077 69.946v25.22l-13.971 14.678a7.491 7.491 0 00-2.044 5.742l-46.145 16.779a39.33 39.33 0 00-9.272 4.858l-7.246-3.623c21.57-9.389 28.403-22.594 28.731-23.25a7.498 7.498 0 000-6.708c-5.407-10.814-6.062-30.635-6.588-46.561-.175-5.302-.341-10.311-.658-14.771-2.557-35.974-29.905-63.103-63.615-63.103s-61.059 27.128-63.615 63.103c-.317 4.461-.483 9.47-.658 14.773-.526 15.925-1.182 35.744-6.588 46.558a7.498 7.498 0 000 6.708c.328.656 7.147 13.834 28.76 23.234l-20.127 10.063C6.684 358.176 0 368.991 0 381.02v55.409a7.5 7.5 0 0015 0V381.02c0-6.312 3.507-11.987 9.152-14.81l25.063-12.531 8.718 8.285a31.466 31.466 0 0021.739 8.688 31.475 31.475 0 0021.739-8.688l8.717-8.284 8.172 4.086c-3.848 6.157-6.032 13.377-6.032 20.94v57.725a7.5 7.5 0 0015 0v-57.725c0-10.296 6.501-19.578 16.178-23.097l48.652-17.691 20.253 30.381a15.462 15.462 0 0011.383 6.835 15.458 15.458 0 0012.504-4.47l12.356-12.356v78.124a7.5 7.5 0 0015 0v-78.124l12.356 12.356a15.452 15.452 0 0010.957 4.547c.513 0 1.029-.025 1.546-.076a15.462 15.462 0 0011.384-6.835l20.254-30.38 48.651 17.691c9.676 3.519 16.178 12.801 16.178 23.097v57.725a7.5 7.5 0 0015 0v-57.725c0-10.428-4.143-20.208-11.093-27.441l1.853-.529c1.869-.534 4.419-1.265 6.979-2.52l19.149 19.149v69.066a7.5 7.5 0 0015 0v-69.066l19.016-19.016c1.011.514 2.073.948 3.191 1.267l30.976 8.85c7.07 2.02 12.009 8.567 12.009 15.921v62.044a7.5 7.5 0 0015 0v-62.044c0-14.018-9.412-26.497-22.888-30.348zM48.115 330.794c-14.029-5.048-21.066-11.778-24.07-15.453 2.048-5.354 3.376-11.486 4.275-17.959 4.136 9.917 11.063 18.383 19.795 24.423v8.989zm42.965 20.298c-6.397 6.078-16.418 6.077-22.813-.001l-6.975-6.628a15.518 15.518 0 001.824-7.324v-7.994a55.427 55.427 0 0016.558 2.517c5.757 0 11.316-.886 16.557-2.512l-.001 7.988c0 2.62.646 5.121 1.824 7.327l-6.974 6.627zm-11.404-34.43c-22.396 0-40.615-18.22-40.615-40.615a7.5 7.5 0 00-7.5-7.5c-.42 0-.83.043-1.231.11l.065-1.93c.167-5.157.328-10.028.625-14.206.958-13.476 6.343-25.894 15.163-34.968 8.899-9.156 20.793-14.198 33.491-14.198s24.591 5.042 33.491 14.198c8.82 9.074 14.205 21.492 15.163 34.968.296 4.177.458 9.047.628 14.203l.045 1.338c-8.16-12.572-20.762-21.837-37.045-27.069-15.043-4.833-27.981-4.534-28.527-4.52a7.5 7.5 0 00-5.191 2.291l-13.532 14.034a7.5 7.5 0 1010.798 10.412l11.26-11.677c9.697.474 40.894 4.102 53.027 30.819-3.053 19.688-19.975 34.31-40.115 34.31zm31.553 14.157l.001-8.945a55.477 55.477 0 0019.801-24.449c.899 6.458 2.226 12.576 4.27 17.918-2.987 3.64-10.057 10.43-24.072 15.476zm72.174-121.674v-18.608a7.501 7.501 0 00-.746-3.261c-4.826-9.994-7.273-20.598-7.273-31.518V139.72c0-31.239 25.415-56.653 56.653-56.653h104.769v72.692c0 10.92-2.447 21.524-7.273 31.518a7.501 7.501 0 00-.746 3.261v21.355c0 20.311-8.165 39.15-22.991 53.047a74.636 74.636 0 01-5.758 4.875c-.044.03-.086.063-.129.094-13.889 10.545-30.901 15.67-48.667 14.519-38.041-2.463-67.839-35.531-67.839-75.283zm42.229 150.911c-.052.052-.173.175-.418.149a.477.477 0 01-.381-.229l-23.325-34.988 7.506-7.887 35.385 24.187-18.767 18.768zm30.463-28.943l-40.615-27.762v-14c10.509 5.681 22.276 9.234 34.791 10.044 1.977.128 3.942.191 5.901.191 14.341 0 28.143-3.428 40.538-9.935v13.7l-40.615 27.762zm31.262 28.865a.477.477 0 01-.381.229c-.245.031-.365-.098-.418-.149l-18.767-18.767 35.385-24.188 7.507 7.887-23.326 34.988zm136.951-6.328l-17.02-17.019c.297-1.349.465-2.826.464-4.455l-.001-3.165a52.589 52.589 0 0016.579 2.65 55.71 55.71 0 0016.536-2.501v3.02c0 1.496.188 2.962.542 4.371l-17.1 17.099zm28.283-48.454c-7.949 7.714-18.45 11.788-29.537 11.446-21.704-.651-39.361-19.768-39.361-42.613v-14.021a7.493 7.493 0 00-.792-3.354l-4.633-9.266a24.706 24.706 0 01-2.594-10.991v-.447c0-17.974 14.623-32.596 32.596-32.596h64.673v31.15a32.77 32.77 0 01-3.441 14.578l-3.786 7.572a7.496 7.496 0 00-.792 3.354v16.038c0 11.08-4.38 21.432-12.333 29.15z\"\n        }\n      ></path>\n\n      <path\n        d={\n          \"M472.423 380.814a7.5 7.5 0 00-7.5 7.5v48.115a7.5 7.5 0 0015 0v-48.115a7.5 7.5 0 00-7.5-7.5zm-432.846 9.914a7.5 7.5 0 00-7.5 7.5v38.201a7.5 7.5 0 0015 0v-38.201a7.5 7.5 0 00-7.5-7.5zm277.955-232.253c-28.366-28.366-87.715-22.943-111.917-19.295-7.623 1.149-13.155 7.6-13.155 15.339v17.278a7.5 7.5 0 0015 0v-17.279c0-.255.168-.473.392-.507 9.667-1.457 28.85-3.705 48.725-2.38 23.388 1.557 40.328 7.428 50.349 17.45a7.5 7.5 0 0010.606 0 7.5 7.5 0 000-10.606zM167.884 396.853a7.5 7.5 0 00-7.5 7.5v32.077a7.5 7.5 0 0015 0v-32.077a7.5 7.5 0 00-7.5-7.5zm176.422 0a7.5 7.5 0 00-7.5 7.5v32.077a7.5 7.5 0 0015 0v-32.077a7.5 7.5 0 00-7.5-7.5z\"\n        }\n      ></path>\n    </svg>\n  )\n}\n\nexport default TeamsvgIcon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport type LocationIconProps = React.ComponentProps<\"svg\"> & {\n  title?: string\n}\n\nexport function LocationIcon(props: LocationIconProps) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      viewBox={\"0 0 512 512\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      style={{\n        fill: \"currentcolor\",\n\n        ...(style || {}),\n      }}\n      className={classNames(\"plasmic-default__svg\", className)}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        d={\n          \"M256 0C153.755 0 70.573 83.182 70.573 185.426c0 126.888 165.939 313.167 173.004 321.035 6.636 7.391 18.222 7.378 24.846 0 7.065-7.868 173.004-194.147 173.004-321.035C441.425 83.182 358.244 0 256 0zm0 469.729c-55.847-66.338-152.035-197.217-152.035-284.301 0-83.834 68.202-152.036 152.035-152.036s152.035 68.202 152.035 152.035C408.034 272.515 311.861 403.37 256 469.729z\"\n        }\n      ></path>\n\n      <path\n        d={\n          \"M256 92.134c-51.442 0-93.292 41.851-93.292 93.293S204.559 278.72 256 278.72s93.291-41.851 93.291-93.293S307.441 92.134 256 92.134zm0 153.194c-33.03 0-59.9-26.871-59.9-59.901s26.871-59.901 59.9-59.901 59.9 26.871 59.9 59.901-26.871 59.901-59.9 59.901z\"\n        }\n      ></path>\n    </svg>\n  )\n}\n\nexport default LocationIcon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: azVx9DM13tZbR2SGxpPJBW\n// Component: QxisHOJ3lBN\nimport * as React from \"react\"\n\nimport { Link, GatsbyLinkProps as LinkProps } from \"gatsby\"\n\nimport * as p from \"@plasmicapp/react-web\"\n\nimport {\n  hasVariant,\n  classNames,\n  wrapWithClassName,\n  createPlasmicElementProxy,\n  makeFragment,\n  MultiChoiceArg,\n  SingleBooleanChoiceArg,\n  SingleChoiceArg,\n  pick,\n  omit,\n  useTrigger,\n  StrictProps,\n  deriveRenderOpts,\n  ensureGlobalVariants,\n} from \"@plasmicapp/react-web\"\nimport NavItem from \"../../NavItem\" // plasmic-import: 6Hw2GdZg4E/component\n\nimport { useScreenVariants } from \"./PlasmicGlobalVariant__Screen\" // plasmic-import: MpD2J1nj9GPB/globalVariant\n\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as defaultcss from \"../plasmic__default_style.module.css\" // plasmic-import: global/defaultcss\nimport * as projectcss from \"./plasmic_underhand.module.css\" // plasmic-import: azVx9DM13tZbR2SGxpPJBW/projectcss\nimport * as sty from \"./PlasmicMobileNavigation.module.css\" // plasmic-import: QxisHOJ3lBN/css\n\nimport MenusvgIcon from \"./icons/PlasmicIcon__Menusvg\" // plasmic-import: X92WVhKAn/icon\nimport WhiskeysvgIcon from \"./icons/PlasmicIcon__Whiskeysvg\" // plasmic-import: iw-Wt1o3f/icon\nimport TraysvgIcon from \"./icons/PlasmicIcon__Traysvg\" // plasmic-import: Dy0n5Dy_a/icon\nimport TeamsvgIcon from \"./icons/PlasmicIcon__Teamsvg\" // plasmic-import: rmynkbPIN/icon\nimport LocationIcon from \"./icons/PlasmicIcon__Location\" // plasmic-import: cBPVv-cl4/icon\nimport namtrebaBurgersLogoEnYzwnINd from \"./images/namtrebaBurgersLogo.png\" // plasmic-import: ENYzwnINd/picture\n\nexport type PlasmicMobileNavigation__VariantMembers = {}\n\nexport type PlasmicMobileNavigation__VariantsArgs = {}\ntype VariantPropType = keyof PlasmicMobileNavigation__VariantsArgs\nexport const PlasmicMobileNavigation__VariantProps =\n  new Array<VariantPropType>()\n\nexport type PlasmicMobileNavigation__ArgsType = {}\ntype ArgPropType = keyof PlasmicMobileNavigation__ArgsType\nexport const PlasmicMobileNavigation__ArgProps = new Array<ArgPropType>()\n\nexport type PlasmicMobileNavigation__OverridesType = {\n  root?: p.Flex<\"div\">\n  menu?: p.Flex<typeof NavItem>\n  menu3?: p.Flex<typeof NavItem>\n  label3?: p.Flex<\"div\">\n  menu4?: p.Flex<typeof NavItem>\n  book?: p.Flex<typeof NavItem>\n  delivery?: p.Flex<typeof NavItem>\n  img?: p.Flex<\"img\">\n  contacts?: p.Flex<typeof NavItem>\n}\n\nexport interface DefaultMobileNavigationProps {\n  className?: string\n}\n\nfunction PlasmicMobileNavigation__RenderFunc(props: {\n  variants: PlasmicMobileNavigation__VariantsArgs\n  args: PlasmicMobileNavigation__ArgsType\n  overrides: PlasmicMobileNavigation__OverridesType\n  dataFetches?: PlasmicMobileNavigation__Fetches\n  forNode?: string\n}) {\n  const { variants, args, overrides, forNode, dataFetches } = props\n\n  const globalVariants = ensureGlobalVariants({\n    screen: useScreenVariants(),\n  })\n\n  return (\n    true ? (\n      <p.Stack\n        as={\"div\"}\n        data-plasmic-name={\"root\"}\n        data-plasmic-override={overrides.root}\n        data-plasmic-root={true}\n        data-plasmic-for-node={forNode}\n        hasGap={true}\n        className={classNames(defaultcss.all, projectcss.root_reset, sty.root)}\n      >\n        <NavItem\n          data-plasmic-name={\"menu\"}\n          data-plasmic-override={overrides.menu}\n          className={classNames(\"__wab_instance\", sty.menu)}\n          destination={\"/menu\" as const}\n          icon={\n            <MenusvgIcon\n              className={classNames(defaultcss.all, sty.svg__ipOM)}\n              role={\"img\"}\n            />\n          }\n          label={\"Меню\"}\n        />\n\n        {false ? (\n          <NavItem\n            data-plasmic-name={\"menu3\"}\n            data-plasmic-override={overrides.menu3}\n            className={classNames(\"__wab_instance\", sty.menu3)}\n            icon={\n              <WhiskeysvgIcon\n                className={classNames(defaultcss.all, sty.svg___7Yi0B)}\n                role={\"img\"}\n              />\n            }\n            label={\n              <div\n                data-plasmic-name={\"label3\"}\n                data-plasmic-override={overrides.label3}\n                className={classNames(\n                  defaultcss.all,\n                  defaultcss.__wab_text,\n                  sty.label3\n                )}\n              >\n                {\"про Коктейлі\"}\n              </div>\n            }\n          />\n        ) : null}\n        {false ? (\n          <NavItem\n            data-plasmic-name={\"menu4\"}\n            data-plasmic-override={overrides.menu4}\n            className={classNames(\"__wab_instance\", sty.menu4)}\n            icon={\n              <TraysvgIcon\n                className={classNames(defaultcss.all, sty.svg__sY4J)}\n                role={\"img\"}\n              />\n            }\n            label={\n              (hasVariant(globalVariants, \"screen\", \"xl\") ? true : true) ? (\n                <div\n                  className={classNames(\n                    defaultcss.all,\n                    defaultcss.__wab_text,\n                    sty.text__vsyTl\n                  )}\n                >\n                  {hasVariant(globalVariants, \"screen\", \"xl\")\n                    ? \"про Страви\"\n                    : \"про Страви\"}\n                </div>\n              ) : null\n            }\n          />\n        ) : null}\n        {false ? (\n          <NavItem\n            data-plasmic-name={\"book\"}\n            data-plasmic-override={overrides.book}\n            className={classNames(\"__wab_instance\", sty.book)}\n            icon={\n              <TeamsvgIcon\n                className={classNames(defaultcss.all, sty.svg__pl9W7)}\n                role={\"img\"}\n              />\n            }\n            label={\n              <div\n                className={classNames(\n                  defaultcss.all,\n                  defaultcss.__wab_text,\n                  sty.text__pxjcM\n                )}\n              >\n                {\"команда pronso\"}\n              </div>\n            }\n          />\n        ) : null}\n        {false ? (\n          <NavItem\n            data-plasmic-name={\"delivery\"}\n            data-plasmic-override={overrides.delivery}\n            className={classNames(\"__wab_instance\", sty.delivery)}\n            icon={\n              <img\n                data-plasmic-name={\"img\"}\n                data-plasmic-override={overrides.img}\n                alt={\"\"}\n                className={classNames(defaultcss.img, sty.img)}\n                src={namtrebaBurgersLogoEnYzwnINd}\n              />\n            }\n            label={\n              <div\n                className={classNames(\n                  defaultcss.all,\n                  defaultcss.__wab_text,\n                  sty.text__lyHqP\n                )}\n              >\n                {\"доставка «нам треба»\"}\n              </div>\n            }\n          />\n        ) : null}\n\n        <NavItem\n          data-plasmic-name={\"contacts\"}\n          data-plasmic-override={overrides.contacts}\n          className={classNames(\"__wab_instance\", sty.contacts)}\n          destination={\"#contacts\" as const}\n          icon={\n            <LocationIcon\n              className={classNames(defaultcss.all, sty.svg__uOiSa)}\n              role={\"img\"}\n            />\n          }\n          label={\n            <div\n              className={classNames(\n                defaultcss.all,\n                defaultcss.__wab_text,\n                sty.text__pjf6L\n              )}\n            >\n              {\"локація і Контакти\"}\n            </div>\n          }\n        />\n      </p.Stack>\n    ) : null\n  ) as React.ReactElement | null\n}\n\nconst PlasmicDescendants = {\n  root: [\n    \"root\",\n    \"menu\",\n    \"menu3\",\n    \"label3\",\n    \"menu4\",\n    \"book\",\n    \"delivery\",\n    \"img\",\n    \"contacts\",\n  ],\n  menu: [\"menu\"],\n  menu3: [\"menu3\", \"label3\"],\n  label3: [\"label3\"],\n  menu4: [\"menu4\"],\n  book: [\"book\"],\n  delivery: [\"delivery\", \"img\"],\n  img: [\"img\"],\n  contacts: [\"contacts\"],\n} as const\ntype NodeNameType = keyof typeof PlasmicDescendants\ntype DescendantsType<T extends NodeNameType> =\n  typeof PlasmicDescendants[T][number]\ntype NodeDefaultElementType = {\n  root: \"div\"\n  menu: typeof NavItem\n  menu3: typeof NavItem\n  label3: \"div\"\n  menu4: typeof NavItem\n  book: typeof NavItem\n  delivery: typeof NavItem\n  img: \"img\"\n  contacts: typeof NavItem\n}\n\ntype ReservedPropsType = \"variants\" | \"args\" | \"overrides\"\ntype NodeOverridesType<T extends NodeNameType> = Pick<\n  PlasmicMobileNavigation__OverridesType,\n  DescendantsType<T>\n>\ntype NodeComponentProps<T extends NodeNameType> =\n  // Explicitly specify variants, args, and overrides as objects\n  {\n    variants?: PlasmicMobileNavigation__VariantsArgs\n    args?: PlasmicMobileNavigation__ArgsType\n    overrides?: NodeOverridesType<T>\n    dataFetches?: PlasmicMobileNavigation__Fetches\n  } & Omit<PlasmicMobileNavigation__VariantsArgs, ReservedPropsType> & // Specify variants directly as props\n    // Specify args directly as props\n    Omit<PlasmicMobileNavigation__ArgsType, ReservedPropsType> &\n    // Specify overrides for each element directly as props\n    Omit<\n      NodeOverridesType<T>,\n      ReservedPropsType | VariantPropType | ArgPropType\n    > &\n    // Specify props for the root element\n    Omit<\n      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,\n      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>\n    >\n\nfunction makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {\n  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key }\n  const func = function <T extends PropsType>(\n    props: T & StrictProps<T, PropsType>\n  ) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicMobileNavigation__ArgProps,\n      internalVariantPropNames: PlasmicMobileNavigation__VariantProps,\n    })\n\n    const { dataFetches } = props\n\n    return PlasmicMobileNavigation__RenderFunc({\n      variants,\n      args,\n      overrides,\n      dataFetches,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicMobileNavigation\"\n  } else {\n    func.displayName = `PlasmicMobileNavigation.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicMobileNavigation = Object.assign(\n  // Top-level PlasmicMobileNavigation renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    menu: makeNodeComponent(\"menu\"),\n    menu3: makeNodeComponent(\"menu3\"),\n    label3: makeNodeComponent(\"label3\"),\n    menu4: makeNodeComponent(\"menu4\"),\n    book: makeNodeComponent(\"book\"),\n    delivery: makeNodeComponent(\"delivery\"),\n    img: makeNodeComponent(\"img\"),\n    contacts: makeNodeComponent(\"contacts\"),\n\n    // Metadata about props expected for PlasmicMobileNavigation\n    internalVariantProps: PlasmicMobileNavigation__VariantProps,\n    internalArgProps: PlasmicMobileNavigation__ArgProps,\n  }\n)\n\nexport default PlasmicMobileNavigation\n/* prettier-ignore-end */\n","export default __webpack_public_path__ + \"static/namtrebaBurgersLogo-d6ec918e10f39ac9bd8a565cd573b5e1.png\";","// extracted by mini-css-extract-plugin\nexport var root = \"PlasmicMobileNavigation-module--root--s6Q98\";\nexport var menu = \"PlasmicMobileNavigation-module--menu--29xLL\";\nexport var svg__ipOM = \"PlasmicMobileNavigation-module--svg__ipOM--3kvJ1\";\nexport var menu3 = \"PlasmicMobileNavigation-module--menu3--26iMP\";\nexport var label3 = \"PlasmicMobileNavigation-module--label3--fDQY1\";\nexport var svg___7Yi0B = \"PlasmicMobileNavigation-module--svg___7Yi0B--20gTL\";\nexport var menu4 = \"PlasmicMobileNavigation-module--menu4--35eMv\";\nexport var text__vsyTl = \"PlasmicMobileNavigation-module--text__vsyTl--1vtow\";\nexport var svg__sY4J = \"PlasmicMobileNavigation-module--svg__sY4J--IasCf\";\nexport var book = \"PlasmicMobileNavigation-module--book--HCiwH\";\nexport var text__pxjcM = \"PlasmicMobileNavigation-module--text__pxjcM--3itAL\";\nexport var svg__pl9W7 = \"PlasmicMobileNavigation-module--svg__pl9W7--31D8p\";\nexport var delivery = \"PlasmicMobileNavigation-module--delivery--3K9kk\";\nexport var text__lyHqP = \"PlasmicMobileNavigation-module--text__lyHqP--27uIA\";\nexport var img = \"PlasmicMobileNavigation-module--img--2Igct\";\nexport var __wab_imgSpacer = \"PlasmicMobileNavigation-module--__wab_img-spacer--1SZGK\";\nexport var contacts = \"PlasmicMobileNavigation-module--contacts--21cf8\";\nexport var text__pjf6L = \"PlasmicMobileNavigation-module--text__pjf6L--1i7qD\";\nexport var svg__uOiSa = \"PlasmicMobileNavigation-module--svg__uOiSa--3f2Wk\";","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport {\n  PlasmicMobileNavigation,\n  DefaultMobileNavigationProps,\n} from \"./plasmic/underhand/PlasmicMobileNavigation\"\nimport { HTMLElementRefOf } from \"@plasmicapp/react-web\"\n\n// Your component props start with props for variants and slots you defined\n// in Plasmic, but you can add more here, like event handlers that you can\n// attach to named nodes in your component.\n//\n// If you don't want to expose certain variants or slots as a prop, you can use\n// Omit to hide them:\n//\n// interface MobileNavigationProps extends Omit<DefaultMobileNavigationProps, \"hideProps1\"|\"hideProp2\"> {\n//   // etc.\n// }\n//\n// You can also stop extending from DefaultMobileNavigationProps altogether and have\n// total control over the props for your component.\ninterface MobileNavigationProps extends DefaultMobileNavigationProps {}\n\nfunction MobileNavigation_(\n  props: MobileNavigationProps,\n  ref: HTMLElementRefOf<\"div\">\n) {\n  // Use PlasmicMobileNavigation to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicMobileNavigation are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all MobileNavigationProps here, but feel free\n  // to do whatever works for you.\n\n  return <PlasmicMobileNavigation root={{ ref }} {...props} />\n}\n\nconst MobileNavigation = React.forwardRef(MobileNavigation_)\nexport default MobileNavigation\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: azVx9DM13tZbR2SGxpPJBW\n// Component: WybYbYmXYd\nimport * as React from \"react\"\n\nimport { Link, GatsbyLinkProps as LinkProps } from \"gatsby\"\n\nimport * as p from \"@plasmicapp/react-web\"\n\nimport {\n  hasVariant,\n  classNames,\n  wrapWithClassName,\n  createPlasmicElementProxy,\n  makeFragment,\n  MultiChoiceArg,\n  SingleBooleanChoiceArg,\n  SingleChoiceArg,\n  pick,\n  omit,\n  useTrigger,\n  StrictProps,\n  deriveRenderOpts,\n  ensureGlobalVariants,\n} from \"@plasmicapp/react-web\"\nimport NavItem from \"../../NavItem\" // plasmic-import: 6Hw2GdZg4E/component\n\nimport { useScreenVariants } from \"./PlasmicGlobalVariant__Screen\" // plasmic-import: MpD2J1nj9GPB/globalVariant\n\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as defaultcss from \"../plasmic__default_style.module.css\" // plasmic-import: global/defaultcss\nimport * as projectcss from \"./plasmic_underhand.module.css\" // plasmic-import: azVx9DM13tZbR2SGxpPJBW/projectcss\nimport * as sty from \"./PlasmicSection.module.css\" // plasmic-import: WybYbYmXYd/css\n\nexport type PlasmicSection__VariantMembers = {}\n\nexport type PlasmicSection__VariantsArgs = {}\ntype VariantPropType = keyof PlasmicSection__VariantsArgs\nexport const PlasmicSection__VariantProps = new Array<VariantPropType>()\n\nexport type PlasmicSection__ArgsType = {\n  thumbnail?: React.ReactNode\n  content?: React.ReactNode\n  contentFooter?: React.ReactNode\n  title?: React.ReactNode\n  title2?: React.ReactNode\n}\n\ntype ArgPropType = keyof PlasmicSection__ArgsType\nexport const PlasmicSection__ArgProps = new Array<ArgPropType>(\n  \"thumbnail\",\n  \"content\",\n  \"contentFooter\",\n  \"title\",\n  \"title2\"\n)\n\nexport type PlasmicSection__OverridesType = {\n  root?: p.Flex<\"div\">\n  thumbnail?: p.Flex<\"div\">\n  content?: p.Flex<\"div\">\n  freeBox?: p.Flex<\"div\">\n}\n\nexport interface DefaultSectionProps {\n  thumbnail?: React.ReactNode\n  content?: React.ReactNode\n  contentFooter?: React.ReactNode\n  title?: React.ReactNode\n  title2?: React.ReactNode\n  className?: string\n}\n\nfunction PlasmicSection__RenderFunc(props: {\n  variants: PlasmicSection__VariantsArgs\n  args: PlasmicSection__ArgsType\n  overrides: PlasmicSection__OverridesType\n  dataFetches?: PlasmicSection__Fetches\n  forNode?: string\n}) {\n  const { variants, args, overrides, forNode, dataFetches } = props\n\n  const globalVariants = ensureGlobalVariants({\n    screen: useScreenVariants(),\n  })\n\n  return (\n    <p.Stack\n      as={\"div\"}\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      hasGap={true}\n      className={classNames(defaultcss.all, projectcss.root_reset, sty.root)}\n    >\n      {(\n        hasVariant(globalVariants, \"screen\", \"lg\")\n          ? false\n          : hasVariant(globalVariants, \"screen\", \"sm\")\n          ? true\n          : true\n      ) ? (\n        <h2 className={classNames(defaultcss.h2, sty.h2__i3Dbg)}>\n          {p.renderPlasmicSlot({\n            defaultContents: \"Коктейлі\",\n            value: args.title,\n            className: classNames(sty.slotTargetTitle),\n          })}\n        </h2>\n      ) : null}\n\n      <div\n        data-plasmic-name={\"thumbnail\"}\n        data-plasmic-override={overrides.thumbnail}\n        className={classNames(defaultcss.all, sty.thumbnail)}\n      >\n        {p.renderPlasmicSlot({\n          defaultContents: (\n            <img\n              alt={\"\"}\n              className={classNames(defaultcss.img, sty.img__tpbbf)}\n            />\n          ),\n\n          value: args.thumbnail,\n        })}\n      </div>\n\n      {(hasVariant(globalVariants, \"screen\", \"md\") ? true : true) ? (\n        <p.Stack\n          as={\"div\"}\n          data-plasmic-name={\"content\"}\n          data-plasmic-override={overrides.content}\n          hasGap={true}\n          className={classNames(defaultcss.all, sty.content)}\n        >\n          {false ? (\n            <h2 className={classNames(defaultcss.h2, sty.h2__uKNu)}>\n              {p.renderPlasmicSlot({\n                defaultContents: \"Коктейлі\",\n                value: args.title2,\n                className: classNames(sty.slotTargetTitle2),\n              })}\n            </h2>\n          ) : null}\n          {p.renderPlasmicSlot({\n            defaultContents:\n              \"Наші коктейлі смачні — всім зрозуміло і це легко перевірити.\\n\\nАле мало хто знає про коктейлі стільки як наші майстри — в цьому наша унікальність — \\nти п’єш коктейль і дізнаєшся його історію. \\n\\nПрийти в Underhand — дізнатись щось нове про себе через призму цікавого поєднання смаків твого персонального коктейля — бармен розуміє вас і знає, що тобі потрібно саме зараз\",\n            value: args.content,\n            className: classNames(sty.slotTargetContent),\n          })}\n\n          <div\n            data-plasmic-name={\"freeBox\"}\n            data-plasmic-override={overrides.freeBox}\n            className={classNames(defaultcss.all, sty.freeBox)}\n          >\n            {p.renderPlasmicSlot({\n              defaultContents: (\n                <React.Fragment>\n                  <NavItem\n                    icon={null}\n                    label={\n                      <div\n                        className={classNames(\n                          defaultcss.all,\n                          defaultcss.__wab_text,\n                          sty.text__iz0Sv\n                        )}\n                      >\n                        {\"більше про коктейлі\"}\n                      </div>\n                    }\n                  />\n\n                  <NavItem\n                    className={classNames(\n                      \"__wab_instance\",\n                      sty.navItem___4XYlg\n                    )}\n                    icon={null}\n                    label={\n                      <div\n                        className={classNames(\n                          defaultcss.all,\n                          defaultcss.__wab_text,\n                          sty.text__wvkR\n                        )}\n                      >\n                        {\"меню\"}\n                      </div>\n                    }\n                  />\n                </React.Fragment>\n              ),\n              value: args.contentFooter,\n            })}\n          </div>\n        </p.Stack>\n      ) : null}\n    </p.Stack>\n  ) as React.ReactElement | null\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"thumbnail\", \"content\", \"freeBox\"],\n  thumbnail: [\"thumbnail\"],\n  content: [\"content\", \"freeBox\"],\n  freeBox: [\"freeBox\"],\n} as const\ntype NodeNameType = keyof typeof PlasmicDescendants\ntype DescendantsType<T extends NodeNameType> =\n  typeof PlasmicDescendants[T][number]\ntype NodeDefaultElementType = {\n  root: \"div\"\n  thumbnail: \"div\"\n  content: \"div\"\n  freeBox: \"div\"\n}\n\ntype ReservedPropsType = \"variants\" | \"args\" | \"overrides\"\ntype NodeOverridesType<T extends NodeNameType> = Pick<\n  PlasmicSection__OverridesType,\n  DescendantsType<T>\n>\ntype NodeComponentProps<T extends NodeNameType> =\n  // Explicitly specify variants, args, and overrides as objects\n  {\n    variants?: PlasmicSection__VariantsArgs\n    args?: PlasmicSection__ArgsType\n    overrides?: NodeOverridesType<T>\n    dataFetches?: PlasmicSection__Fetches\n  } & Omit<PlasmicSection__VariantsArgs, ReservedPropsType> & // Specify variants directly as props\n    // Specify args directly as props\n    Omit<PlasmicSection__ArgsType, ReservedPropsType> &\n    // Specify overrides for each element directly as props\n    Omit<\n      NodeOverridesType<T>,\n      ReservedPropsType | VariantPropType | ArgPropType\n    > &\n    // Specify props for the root element\n    Omit<\n      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,\n      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>\n    >\n\nfunction makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {\n  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key }\n  const func = function <T extends PropsType>(\n    props: T & StrictProps<T, PropsType>\n  ) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicSection__ArgProps,\n      internalVariantPropNames: PlasmicSection__VariantProps,\n    })\n\n    const { dataFetches } = props\n\n    return PlasmicSection__RenderFunc({\n      variants,\n      args,\n      overrides,\n      dataFetches,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicSection\"\n  } else {\n    func.displayName = `PlasmicSection.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicSection = Object.assign(\n  // Top-level PlasmicSection renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    thumbnail: makeNodeComponent(\"thumbnail\"),\n    content: makeNodeComponent(\"content\"),\n    freeBox: makeNodeComponent(\"freeBox\"),\n\n    // Metadata about props expected for PlasmicSection\n    internalVariantProps: PlasmicSection__VariantProps,\n    internalArgProps: PlasmicSection__ArgProps,\n  }\n)\n\nexport default PlasmicSection\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var root = \"PlasmicSection-module--root--SyqnW\";\nexport var h2__i3Dbg = \"PlasmicSection-module--h2__i3Dbg---5dUF\";\nexport var slotTargetTitle = \"PlasmicSection-module--slotTargetTitle--2OeJ_\";\nexport var thumbnail = \"PlasmicSection-module--thumbnail--N2Yyw\";\nexport var img__tpbbf = \"PlasmicSection-module--img__tpbbf--3kZ4Y\";\nexport var __wab_imgSpacer = \"PlasmicSection-module--__wab_img-spacer--1qw09\";\nexport var content = \"PlasmicSection-module--content--14to6\";\nexport var h2__uKNu = \"PlasmicSection-module--h2__uKNu--3je_2\";\nexport var slotTargetTitle2 = \"PlasmicSection-module--slotTargetTitle2--2J3u_\";\nexport var slotTargetContent = \"PlasmicSection-module--slotTargetContent--2DsS5\";\nexport var freeBox = \"PlasmicSection-module--freeBox--3vV6h\";\nexport var text__iz0Sv = \"PlasmicSection-module--text__iz0Sv--28c1G\";\nexport var navItem___4XYlg = \"PlasmicSection-module--navItem___4XYlg--Th0zP\";\nexport var text__wvkR = \"PlasmicSection-module--text__wvkR--1wENx\";","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport {\n  PlasmicSection,\n  DefaultSectionProps,\n} from \"./plasmic/underhand/PlasmicSection\"\nimport { HTMLElementRefOf } from \"@plasmicapp/react-web\"\n\n// Your component props start with props for variants and slots you defined\n// in Plasmic, but you can add more here, like event handlers that you can\n// attach to named nodes in your component.\n//\n// If you don't want to expose certain variants or slots as a prop, you can use\n// Omit to hide them:\n//\n// interface SectionProps extends Omit<DefaultSectionProps, \"hideProps1\"|\"hideProp2\"> {\n//   // etc.\n// }\n//\n// You can also stop extending from DefaultSectionProps altogether and have\n// total control over the props for your component.\ninterface SectionProps extends DefaultSectionProps {}\n\nfunction Section_(props: SectionProps, ref: HTMLElementRefOf<\"div\">) {\n  // Use PlasmicSection to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicSection are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all SectionProps here, but feel free\n  // to do whatever works for you.\n\n  return <PlasmicSection root={{ ref }} {...props} />\n}\n\nconst Section = React.forwardRef(Section_)\nexport default Section\n","// extracted by mini-css-extract-plugin\nexport var root = \"PlasmicHome-module--root--2zQBN\";\nexport var header = \"PlasmicHome-module--header--8nxvd\";\nexport var title = \"PlasmicHome-module--title--JS3hH\";\nexport var subtitle = \"PlasmicHome-module--subtitle--1_O4t\";\nexport var freeBox__kfXle = \"PlasmicHome-module--freeBox__kfXle--3LBOu\";\nexport var img__s6CdJ = \"PlasmicHome-module--img__s6CdJ--PRsyc\";\nexport var __wab_imgSpacer = \"PlasmicHome-module--__wab_img-spacer--3P4Ii\";\nexport var section___8Yd9Z = \"PlasmicHome-module--section___8Yd9Z--V3s9B\";\nexport var img___8PwXg = \"PlasmicHome-module--img___8PwXg--1Df57\";\nexport var freeBox__zjVkR = \"PlasmicHome-module--freeBox__zjVkR--3p4zR\";\nexport var freeBox__kvsPa = \"PlasmicHome-module--freeBox__kvsPa--1S6e8\";\nexport var text__vv9K = \"PlasmicHome-module--text__vv9K--26q4I\";\nexport var text__xxtEj = \"PlasmicHome-module--text__xxtEj--3cNgI\";\nexport var text__bMrek = \"PlasmicHome-module--text__bMrek--3r2UI\";\nexport var text___30FBs = \"PlasmicHome-module--text___30FBs--39Ejr\";\nexport var navItem__aZklJ = \"PlasmicHome-module--navItem__aZklJ--2npIU\";\nexport var text__qahQn = \"PlasmicHome-module--text__qahQn--11kFi\";\nexport var svg__tosrN = \"PlasmicHome-module--svg__tosrN--1ixh1\";\nexport var navItem__dDEp = \"PlasmicHome-module--navItem__dDEp--3MaAF\";\nexport var text__jp1Sy = \"PlasmicHome-module--text__jp1Sy--VS3NU\";\nexport var svg__gHc4V = \"PlasmicHome-module--svg__gHc4V--FMkbe\";\nexport var text__b4T1C = \"PlasmicHome-module--text__b4T1C--4CQU_\";\nexport var section__zzxZ = \"PlasmicHome-module--section__zzxZ--14JmL\";\nexport var img__aOdB = \"PlasmicHome-module--img__aOdB--1ihyp\";\nexport var text___393No = \"PlasmicHome-module--text___393No--3MDq9\";\nexport var svg__dTou = \"PlasmicHome-module--svg__dTou--1zPRn\";\nexport var navItem__ndP4 = \"PlasmicHome-module--navItem__ndP4--3TmCw\";\nexport var text__bBtZx = \"PlasmicHome-module--text__bBtZx--1ajNz\";\nexport var svg___2Be7Q = \"PlasmicHome-module--svg___2Be7Q--38RZF\";\nexport var navItem___00KTs = \"PlasmicHome-module--navItem___00KTs--zp5Qu\";\nexport var text__rRcda = \"PlasmicHome-module--text__rRcda--26_kh\";\nexport var svg__unC0D = \"PlasmicHome-module--svg__unC0D--yVbG5\";\nexport var text__hktQp = \"PlasmicHome-module--text__hktQp--11dRp\";\nexport var section__tymne = \"PlasmicHome-module--section__tymne--1e-yD\";\nexport var img___519DX = \"PlasmicHome-module--img___519DX--1P8WI\";\nexport var text__siNBn = \"PlasmicHome-module--text__siNBn--3tsOC\";\nexport var navItem___8V7Tz = \"PlasmicHome-module--navItem___8V7Tz--3ZteL\";\nexport var text__jtqRw = \"PlasmicHome-module--text__jtqRw--5vKmF\";\nexport var svg__fzhgz = \"PlasmicHome-module--svg__fzhgz--cXmCf\";\nexport var navItem__dbxWv = \"PlasmicHome-module--navItem__dbxWv--2cHZC\";\nexport var text__sqZHz = \"PlasmicHome-module--text__sqZHz--2gmGF\";\nexport var svg___0UVbd = \"PlasmicHome-module--svg___0UVbd--3sIBr\";\nexport var navItem__y0ODr = \"PlasmicHome-module--navItem__y0ODr--3tzVH\";\nexport var text__u3DWz = \"PlasmicHome-module--text__u3DWz--13qzf\";\nexport var svg__fKoa = \"PlasmicHome-module--svg__fKoa--14heX\";\nexport var text__w9LdL = \"PlasmicHome-module--text__w9LdL--2BNAZ\";\nexport var section__ntj1P = \"PlasmicHome-module--section__ntj1P--RedXz\";\nexport var img__fhnH0 = \"PlasmicHome-module--img__fhnH0--3ZCcM\";\nexport var text__khCoe = \"PlasmicHome-module--text__khCoe--4820g\";\nexport var navItem__q451 = \"PlasmicHome-module--navItem__q451--2QUlo\";\nexport var text__yGgC = \"PlasmicHome-module--text__yGgC--3R7DU\";\nexport var img__olnxq = \"PlasmicHome-module--img__olnxq--2qrf9\";\nexport var text___0QnGd = \"PlasmicHome-module--text___0QnGd--3qTWj\";\nexport var contacts = \"PlasmicHome-module--contacts--35tG9\";\nexport var location = \"PlasmicHome-module--location--1k3zh\";\nexport var text__e6FVf = \"PlasmicHome-module--text__e6FVf--2D4ju\";\nexport var svg__bCi1O = \"PlasmicHome-module--svg__bCi1O--2XNwo\";\nexport var svg__sjvL6 = \"PlasmicHome-module--svg__sjvL6--2TZND\";\nexport var instagram = \"PlasmicHome-module--instagram--181Zv\";\nexport var text__per0M = \"PlasmicHome-module--text__per0M--3ccdG\";\nexport var svg__iiGr1 = \"PlasmicHome-module--svg__iiGr1--31LtV\";\nexport var facebook = \"PlasmicHome-module--facebook--1Ujb4\";\nexport var text__abEqo = \"PlasmicHome-module--text__abEqo--2GGAZ\";\nexport var svg__f2Oj1 = \"PlasmicHome-module--svg__f2Oj1--2DgAg\";\nexport var menu = \"PlasmicHome-module--menu--2D1dn\";\nexport var text__iq5Zr = \"PlasmicHome-module--text__iq5Zr--2DDbn\";\nexport var svg__kfRtk = \"PlasmicHome-module--svg__kfRtk--3LmBU\";\nexport var book2 = \"PlasmicHome-module--book2--2e5x6\";\nexport var text__qbttA = \"PlasmicHome-module--text__qbttA--2pzwp\";\nexport var svg__fsKm = \"PlasmicHome-module--svg__fsKm--2sjU8\";\nexport var event = \"PlasmicHome-module--event--1de6J\";\nexport var text__tLxku = \"PlasmicHome-module--text__tLxku--1jmgp\";\nexport var svg___82Fov = \"PlasmicHome-module--svg___82Fov--2NLJw\";\nexport var delivery2 = \"PlasmicHome-module--delivery2--1YF2w\";\nexport var text__doPts = \"PlasmicHome-module--text__doPts--10UcS\";\nexport var svg__oKqHa = \"PlasmicHome-module--svg__oKqHa--1u5J1\";\nexport var partners = \"PlasmicHome-module--partners--3kbg-\";\nexport var text__tq18B = \"PlasmicHome-module--text__tq18B--17nd-\";\nexport var svg__vaa1G = \"PlasmicHome-module--svg__vaa1G--3mCrq\";\nexport var text__auAH = \"PlasmicHome-module--text__auAH--1JkJy\";","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport type PhonesvgIconProps = React.ComponentProps<\"svg\"> & {\n  title?: string\n}\n\nexport function PhonesvgIcon(props: PhonesvgIconProps) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      version={\"1.1\"}\n      x={\"0\"}\n      y={\"0\"}\n      viewBox={\"0 0 512.076 512.076\"}\n      xmlSpace={\"preserve\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      style={{\n        fill: \"currentcolor\",\n\n        ...(style || {}),\n      }}\n      className={classNames(\"plasmic-default__svg\", className)}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        d={\n          \"M498.639 395.039l-103.646-69.12c-13.153-8.701-30.784-5.838-40.508 6.579l-30.191 38.818a12.903 12.903 0 01-16.546 3.482l-5.743-3.166c-19.038-10.377-42.726-23.296-90.453-71.04s-60.672-71.45-71.049-90.453l-3.149-5.743a12.92 12.92 0 013.413-16.606l38.792-30.182c12.412-9.725 15.279-27.351 6.588-40.508l-69.12-103.646C108.12.056 90.25-3.966 76.461 4.323L33.12 30.358A61.136 61.136 0 005.242 66.539c-15.607 56.866-3.866 155.008 140.706 299.597 115.004 114.995 200.619 145.92 259.465 145.92a151.181 151.181 0 0040.107-5.239 61.079 61.079 0 0036.181-27.878l26.061-43.315c8.301-13.792 4.281-31.673-9.123-40.585zm-5.581 31.829l-26.001 43.341a44.103 44.103 0 01-26.027 20.173c-52.497 14.413-144.213 2.475-283.008-136.32S7.29 123.559 21.703 71.054a44.17 44.17 0 0120.198-26.061l43.341-26.001c5.983-3.6 13.739-1.855 17.604 3.959l37.547 56.371 31.514 47.266c3.774 5.707 2.534 13.356-2.85 17.579l-38.801 30.182c-11.808 9.029-15.18 25.366-7.91 38.332l3.081 5.598c10.906 20.002 24.465 44.885 73.967 94.379 49.502 49.493 74.377 63.053 94.37 73.958l5.606 3.089c12.965 7.269 29.303 3.898 38.332-7.91l30.182-38.801c4.224-5.381 11.87-6.62 17.579-2.85l103.637 69.12c5.818 3.862 7.563 11.622 3.958 17.604zM290.161 85.39c80.081.089 144.977 64.986 145.067 145.067 0 4.713 3.82 8.533 8.533 8.533s8.533-3.82 8.533-8.533c-.099-89.503-72.63-162.035-162.133-162.133-4.713 0-8.533 3.82-8.533 8.533s3.82 8.533 8.533 8.533z\"\n        }\n      ></path>\n\n      <path\n        d={\n          \"M290.161 136.59c51.816.061 93.806 42.051 93.867 93.867a8.533 8.533 0 0017.066 0c-.071-61.238-49.696-110.863-110.933-110.933-4.713 0-8.533 3.82-8.533 8.533s3.82 8.533 8.533 8.533z\"\n        }\n      ></path>\n\n      <path\n        d={\n          \"M290.161 187.79c23.552.028 42.638 19.114 42.667 42.667a8.533 8.533 0 0017.066 0c-.038-32.974-26.759-59.696-59.733-59.733-4.713 0-8.533 3.82-8.533 8.533s3.82 8.533 8.533 8.533z\"\n        }\n      ></path>\n    </svg>\n  )\n}\n\nexport default PhonesvgIcon\n/* prettier-ignore-end */\n","export default __webpack_public_path__ + \"static/intro-7e65da02633cdf940b3d9e944b4a9e20.jpeg\";","export default __webpack_public_path__ + \"static/meetjpg-a39d62fb6c93782d4bd644f61fd0caaa.jpeg\";","export default __webpack_public_path__ + \"static/cocktailjpg-d5abfe471b52c822fba2ae0dfb8dc23f.jpeg\";","export default __webpack_public_path__ + \"static/foodjpg-8de4aa4aed3a59278d6e73cba377eafe.jpeg\";","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: azVx9DM13tZbR2SGxpPJBW\n// Component: jSktf8A0ArUU\nimport * as React from \"react\"\n\nimport { Link, GatsbyLinkProps as LinkProps } from \"gatsby\"\n\nimport * as p from \"@plasmicapp/react-web\"\n\nimport {\n  hasVariant,\n  classNames,\n  wrapWithClassName,\n  createPlasmicElementProxy,\n  makeFragment,\n  MultiChoiceArg,\n  SingleBooleanChoiceArg,\n  SingleChoiceArg,\n  pick,\n  omit,\n  useTrigger,\n  StrictProps,\n  deriveRenderOpts,\n  ensureGlobalVariants,\n} from \"@plasmicapp/react-web\"\nimport Header from \"../../Header\" // plasmic-import: RwQZi7eZFd/component\nimport MobileNavigation from \"../../MobileNavigation\" // plasmic-import: QxisHOJ3lBN/component\nimport Section from \"../../Section\" // plasmic-import: WybYbYmXYd/component\nimport NavItem from \"../../NavItem\" // plasmic-import: 6Hw2GdZg4E/component\n\nimport { LanguageValue, useLanguage } from \"./PlasmicGlobalVariant__Language\" // plasmic-import: IK06cfUF8p/globalVariant\nimport { useScreenVariants } from \"./PlasmicGlobalVariant__Screen\" // plasmic-import: MpD2J1nj9GPB/globalVariant\n\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as defaultcss from \"../plasmic__default_style.module.css\" // plasmic-import: global/defaultcss\nimport * as projectcss from \"./plasmic_underhand.module.css\" // plasmic-import: azVx9DM13tZbR2SGxpPJBW/projectcss\nimport * as sty from \"./PlasmicHome.module.css\" // plasmic-import: jSktf8A0ArUU/css\n\nimport MenusvgIcon from \"./icons/PlasmicIcon__Menusvg\" // plasmic-import: X92WVhKAn/icon\nimport PhonesvgIcon from \"./icons/PlasmicIcon__Phonesvg\" // plasmic-import: BvGoZqD6m/icon\nimport WhiskeysvgIcon from \"./icons/PlasmicIcon__Whiskeysvg\" // plasmic-import: iw-Wt1o3f/icon\nimport TraysvgIcon from \"./icons/PlasmicIcon__Traysvg\" // plasmic-import: Dy0n5Dy_a/icon\nimport LocationIcon from \"./icons/PlasmicIcon__Location\" // plasmic-import: cBPVv-cl4/icon\nimport Instagram2SvgIcon from \"./icons/PlasmicIcon__Instagram2Svg\" // plasmic-import: 9tosiFRmf/icon\nimport FacebooksvgIcon from \"./icons/PlasmicIcon__Facebooksvg\" // plasmic-import: Flw25NYGX/icon\nimport introYicp3LgS from \"./images/intro.jpeg\" // plasmic-import: Yicp3Lg_S/picture\nimport meetjpgZpDg6NFg from \"./images/meetjpg.jpeg\" // plasmic-import: ZPDg6n-FG/picture\nimport cocktailjpgRFdkfObjp from \"./images/cocktailjpg.jpeg\" // plasmic-import: rFDKFObjp/picture\nimport foodjpgN0XjTwSQv from \"./images/foodjpg.jpeg\" // plasmic-import: N0xjTwSQv/picture\nimport ntbFeelFqLvwmDjh from \"./images/ntbFeel.png\" // plasmic-import: fqLvwmDJH/picture\nimport namtrebaBurgersLogoEnYzwnINd from \"./images/namtrebaBurgersLogo.png\" // plasmic-import: ENYzwnINd/picture\n\nexport type PlasmicHome__VariantMembers = {}\n\nexport type PlasmicHome__VariantsArgs = {}\ntype VariantPropType = keyof PlasmicHome__VariantsArgs\nexport const PlasmicHome__VariantProps = new Array<VariantPropType>()\n\nexport type PlasmicHome__ArgsType = {}\ntype ArgPropType = keyof PlasmicHome__ArgsType\nexport const PlasmicHome__ArgProps = new Array<ArgPropType>()\n\nexport type PlasmicHome__OverridesType = {\n  root?: p.Flex<\"div\">\n  header?: p.Flex<typeof Header>\n  mainNav?: p.Flex<typeof MobileNavigation>\n  title?: p.Flex<\"h1\">\n  subtitle?: p.Flex<\"h1\">\n  contacts?: p.Flex<\"div\">\n  location?: p.Flex<typeof NavItem>\n  phone?: p.Flex<typeof NavItem>\n  instagram?: p.Flex<typeof NavItem>\n  facebook?: p.Flex<typeof NavItem>\n  menu?: p.Flex<typeof NavItem>\n  book2?: p.Flex<typeof NavItem>\n  event?: p.Flex<typeof NavItem>\n  delivery2?: p.Flex<typeof NavItem>\n  partners?: p.Flex<typeof NavItem>\n}\n\nexport interface DefaultHomeProps {\n  className?: string\n}\n\nfunction PlasmicHome__RenderFunc(props: {\n  variants: PlasmicHome__VariantsArgs\n  args: PlasmicHome__ArgsType\n  overrides: PlasmicHome__OverridesType\n  dataFetches?: PlasmicHome__Fetches\n  forNode?: string\n}) {\n  const { variants, args, overrides, forNode, dataFetches } = props\n\n  const globalVariants = ensureGlobalVariants({\n    language: useLanguage(),\n    screen: useScreenVariants(),\n  })\n\n  return (\n    <React.Fragment>\n      {}\n\n      <style>{`\n        body {\n          margin: 0;\n        }\n      `}</style>\n\n      <div className={defaultcss.plasmic_page_wrapper}>\n        <div\n          data-plasmic-name={\"root\"}\n          data-plasmic-override={overrides.root}\n          data-plasmic-root={true}\n          data-plasmic-for-node={forNode}\n          className={classNames(\n            defaultcss.all,\n            projectcss.root_reset,\n            sty.root,\n            {\n              [sty.root__global_language_en]: hasVariant(\n                globalVariants,\n                \"language\",\n                \"en\"\n              ),\n              [sty.root__global_language_ru]: hasVariant(\n                globalVariants,\n                \"language\",\n                \"ru\"\n              ),\n            }\n          )}\n        >\n          <Header\n            data-plasmic-name={\"header\"}\n            data-plasmic-override={overrides.header}\n            className={classNames(\"__wab_instance\", sty.header)}\n          />\n\n          {(hasVariant(globalVariants, \"screen\", \"sm\") ? true : true) ? (\n            <MobileNavigation\n              data-plasmic-name={\"mainNav\"}\n              data-plasmic-override={overrides.mainNav}\n              className={classNames(\"__wab_instance\", sty.mainNav)}\n            />\n          ) : null}\n\n          <h1\n            data-plasmic-name={\"title\"}\n            data-plasmic-override={overrides.title}\n            className={classNames(\n              defaultcss.h1,\n              defaultcss.__wab_text,\n              sty.title\n            )}\n          >\n            {\"Underhand\"}\n          </h1>\n\n          <h1\n            data-plasmic-name={\"subtitle\"}\n            data-plasmic-override={overrides.subtitle}\n            className={classNames(\n              defaultcss.h1,\n              defaultcss.__wab_text,\n              sty.subtitle\n            )}\n          >\n            {\"Speakeasy бар \\nзахований в серці троєщини\"}\n          </h1>\n\n          <div\n            className={classNames(defaultcss.all, sty.freeBox__kfXle)}\n            id={\"navigation\" as const}\n          >\n            <img\n              alt={\"\"}\n              className={classNames(defaultcss.img, sty.img__s6CdJ)}\n              src={introYicp3LgS}\n            />\n          </div>\n\n          {true ? (\n            <Section\n              className={classNames(\"__wab_instance\", sty.section___8Yd9Z)}\n              content={\n                <p.Stack\n                  as={\"div\"}\n                  hasGap={true}\n                  className={classNames(defaultcss.all, sty.freeBox__zjVkR)}\n                >\n                  {(\n                    hasVariant(globalVariants, \"screen\", \"sm\") ? true : true\n                  ) ? (\n                    <p.Stack\n                      as={\"div\"}\n                      hasGap={true}\n                      className={classNames(defaultcss.all, sty.freeBox__kvsPa)}\n                    >\n                      <div\n                        className={classNames(\n                          defaultcss.all,\n                          defaultcss.__wab_text,\n                          sty.text__vv9K\n                        )}\n                      >\n                        {\"Історія cтворення\"}\n                      </div>\n\n                      <div\n                        className={classNames(\n                          defaultcss.all,\n                          defaultcss.__wab_text,\n                          sty.text__xxtEj\n                        )}\n                      >\n                        {\"Культура \\nі цінності\"}\n                      </div>\n\n                      <div\n                        className={classNames(\n                          defaultcss.all,\n                          defaultcss.__wab_text,\n                          sty.text__bMrek\n                        )}\n                      >\n                        {\"Плани на майбутнє\"}\n                      </div>\n                    </p.Stack>\n                  ) : null}\n\n                  <div\n                    className={classNames(\n                      defaultcss.all,\n                      defaultcss.__wab_text,\n                      sty.text___30FBs\n                    )}\n                  >\n                    {hasVariant(globalVariants, \"screen\", \"lg\")\n                      ? \"Ми цінуємо людину і спілкування  — \\nхочемо, аби у тебе була можливість  знайти для себе місце, де можеш не соромитись, бути свіжим, спілкуватись без перешкод, зустрічати цікавих людей, дізнаватись щось нове про когось і головне — про себе\"\n                      : \"Ми цінуємо людину і спілкування  — \\nхочемо, аби у тебе була можливість  знайти для себе місце, де можеш не соромитись, бути свіжим, спілкуватись без перешкод, зустрічати цікавих людей, дізнаватись щось нове про когось і головне — про себе\"}\n                  </div>\n                </p.Stack>\n              }\n              contentFooter={\n                <React.Fragment>\n                  <NavItem\n                    className={classNames(\"__wab_instance\", sty.navItem__aZklJ)}\n                    destination={\"/menu\" as const}\n                    icon={\n                      <MenusvgIcon\n                        className={classNames(defaultcss.all, sty.svg__tosrN)}\n                        role={\"img\"}\n                      />\n                    }\n                    label={\n                      <div\n                        className={classNames(\n                          defaultcss.all,\n                          defaultcss.__wab_text,\n                          sty.text__qahQn\n                        )}\n                      >\n                        {\"меню\"}\n                      </div>\n                    }\n                  />\n\n                  <NavItem\n                    className={classNames(\"__wab_instance\", sty.navItem__dDEp)}\n                    destination={\"#contacts\" as const}\n                    icon={\n                      <PhonesvgIcon\n                        className={classNames(defaultcss.all, sty.svg__gHc4V)}\n                        role={\"img\"}\n                      />\n                    }\n                    label={\n                      <div\n                        className={classNames(\n                          defaultcss.all,\n                          defaultcss.__wab_text,\n                          sty.text__jp1Sy\n                        )}\n                      >\n                        {\"Контакти\"}\n                      </div>\n                    }\n                  />\n                </React.Fragment>\n              }\n              thumbnail={\n                <img\n                  alt={\"\"}\n                  className={classNames(defaultcss.img, sty.img___8PwXg)}\n                  src={\n                    hasVariant(globalVariants, \"screen\", \"lg\")\n                      ? meetjpgZpDg6NFg\n                      : meetjpgZpDg6NFg\n                  }\n                />\n              }\n              title={\n                <div\n                  className={classNames(\n                    defaultcss.all,\n                    defaultcss.__wab_text,\n                    sty.text__b4T1C\n                  )}\n                >\n                  {\"Хто такі Underhand\"}\n                </div>\n              }\n            />\n          ) : null}\n\n          <Section\n            className={classNames(\"__wab_instance\", sty.section__zzxZ)}\n            contentFooter={\n              <React.Fragment>\n                {false ? (\n                  <NavItem\n                    className={classNames(\"__wab_instance\")}\n                    icon={\n                      <WhiskeysvgIcon\n                        className={classNames(defaultcss.all, sty.svg__dTou)}\n                        role={\"img\"}\n                      />\n                    }\n                    label={\n                      <div\n                        className={classNames(\n                          defaultcss.all,\n                          defaultcss.__wab_text,\n                          sty.text___393No\n                        )}\n                      >\n                        {\"більше про коктейлі\"}\n                      </div>\n                    }\n                  />\n                ) : null}\n\n                <NavItem\n                  className={classNames(\"__wab_instance\", sty.navItem__ndP4)}\n                  destination={\"/menu\" as const}\n                  icon={\n                    <MenusvgIcon\n                      className={classNames(defaultcss.all, sty.svg___2Be7Q)}\n                      role={\"img\"}\n                    />\n                  }\n                  label={\n                    <div\n                      className={classNames(\n                        defaultcss.all,\n                        defaultcss.__wab_text,\n                        sty.text__bBtZx\n                      )}\n                    >\n                      {\"меню\"}\n                    </div>\n                  }\n                />\n\n                <NavItem\n                  className={classNames(\"__wab_instance\", sty.navItem___00KTs)}\n                  destination={\"#contacts\" as const}\n                  icon={\n                    <PhonesvgIcon\n                      className={classNames(defaultcss.all, sty.svg__unC0D)}\n                      role={\"img\"}\n                    />\n                  }\n                  label={\n                    <div\n                      className={classNames(\n                        defaultcss.all,\n                        defaultcss.__wab_text,\n                        sty.text__rRcda\n                      )}\n                    >\n                      {\"Контакти\"}\n                    </div>\n                  }\n                />\n              </React.Fragment>\n            }\n            thumbnail={\n              <img\n                alt={\"\"}\n                className={classNames(defaultcss.img, sty.img__aOdB)}\n                src={cocktailjpgRFdkfObjp}\n              />\n            }\n            title={\n              <div\n                className={classNames(\n                  defaultcss.all,\n                  defaultcss.__wab_text,\n                  sty.text__hktQp\n                )}\n              >\n                {\"Коктейлі в тренді\"}\n              </div>\n            }\n          />\n\n          {(hasVariant(globalVariants, \"screen\", \"md\") ? true : true) ? (\n            <Section\n              className={classNames(\"__wab_instance\", sty.section__tymne)}\n              content={\n                <div\n                  className={classNames(\n                    defaultcss.all,\n                    defaultcss.__wab_text,\n                    sty.text__siNBn\n                  )}\n                >\n                  {\n                    \"А що смакує до куртого коктейлю і цікавої історії краще, ніж смачнюча їжа? \\n\\nПравильно! Багато смачнючої їжі!\\n\\nВи отримуєте вибух смаків, адже ми дуже відповідально ставимось до вибору продуктів з яких готуємо, ми дуже прискіпливо ставимось до поєднання смаків у стравах, та взагалі до формування меню. \\n\\nОбирайте і насолоджуйтесь! \"\n                  }\n                </div>\n              }\n              contentFooter={\n                <React.Fragment>\n                  <NavItem\n                    className={classNames(\n                      \"__wab_instance\",\n                      sty.navItem___8V7Tz\n                    )}\n                    destination={\"/menu\" as const}\n                    icon={\n                      <MenusvgIcon\n                        className={classNames(defaultcss.all, sty.svg__fzhgz)}\n                        role={\"img\"}\n                      />\n                    }\n                    label={\n                      <div\n                        className={classNames(\n                          defaultcss.all,\n                          defaultcss.__wab_text,\n                          sty.text__jtqRw\n                        )}\n                      >\n                        {\"меню\"}\n                      </div>\n                    }\n                  />\n\n                  {false ? (\n                    <NavItem\n                      className={classNames(\n                        \"__wab_instance\",\n                        sty.navItem__dbxWv\n                      )}\n                      destination={\"#contacts\" as const}\n                      icon={\n                        <PhonesvgIcon\n                          className={classNames(\n                            defaultcss.all,\n                            sty.svg___0UVbd\n                          )}\n                          role={\"img\"}\n                        />\n                      }\n                      label={\n                        <div\n                          className={classNames(\n                            defaultcss.all,\n                            defaultcss.__wab_text,\n                            sty.text__sqZHz\n                          )}\n                        >\n                          {\"Контакти\"}\n                        </div>\n                      }\n                    />\n                  ) : null}\n                  {false ? (\n                    <NavItem\n                      className={classNames(\n                        \"__wab_instance\",\n                        sty.navItem__y0ODr\n                      )}\n                      icon={\n                        <TraysvgIcon\n                          className={classNames(defaultcss.all, sty.svg__fKoa)}\n                          role={\"img\"}\n                        />\n                      }\n                      label={\n                        <div\n                          className={classNames(\n                            defaultcss.all,\n                            defaultcss.__wab_text,\n                            sty.text__u3DWz\n                          )}\n                        >\n                          {\"більше про Страви\"}\n                        </div>\n                      }\n                    />\n                  ) : null}\n                </React.Fragment>\n              }\n              thumbnail={\n                <img\n                  alt={\"\"}\n                  className={classNames(defaultcss.img, sty.img___519DX)}\n                  src={foodjpgN0XjTwSQv}\n                />\n              }\n              title={\n                <div\n                  className={classNames(\n                    defaultcss.all,\n                    defaultcss.__wab_text,\n                    sty.text__w9LdL\n                  )}\n                >\n                  {\"СМАЧНЮЩІ страви\"}\n                </div>\n              }\n            />\n          ) : null}\n          {false ? (\n            <Section\n              className={classNames(\"__wab_instance\", sty.section__ntj1P)}\n              content={\n                <div\n                  className={classNames(\n                    defaultcss.all,\n                    defaultcss.__wab_text,\n                    sty.text__khCoe\n                  )}\n                >\n                  {\n                    \"Ти вже зрозумів, що немає ніяких шансів скуштувати щось не смачне в Underhand.\\n\\nА для того, щоб ти міг тішити себе і вдома, ми створили окрему службу доставки — \\n«Нам треба». \\n\\nЇжа якісно запаковується і доставляється до твоєї оселі максимально швидко.\"\n                  }\n                </div>\n              }\n              contentFooter={\n                <NavItem\n                  className={classNames(\"__wab_instance\", sty.navItem__q451)}\n                  icon={\n                    <img\n                      alt={\"\"}\n                      className={classNames(defaultcss.img, sty.img__olnxq)}\n                      src={namtrebaBurgersLogoEnYzwnINd}\n                    />\n                  }\n                  label={\n                    <div\n                      className={classNames(\n                        defaultcss.all,\n                        defaultcss.__wab_text,\n                        sty.text__yGgC\n                      )}\n                    >\n                      {\"замовляй доставку\\nна namtreba.com\"}\n                    </div>\n                  }\n                />\n              }\n              thumbnail={\n                <img\n                  alt={\"\"}\n                  className={classNames(defaultcss.img, sty.img__fhnH0)}\n                  src={ntbFeelFqLvwmDjh}\n                />\n              }\n              title={\n                <div\n                  className={classNames(\n                    defaultcss.all,\n                    defaultcss.__wab_text,\n                    sty.text___0QnGd\n                  )}\n                >\n                  {\"доставка бургерів\"}\n                </div>\n              }\n            />\n          ) : null}\n          {true ? (\n            <div\n              data-plasmic-name={\"contacts\"}\n              data-plasmic-override={overrides.contacts}\n              className={classNames(defaultcss.all, sty.contacts)}\n              id={\"contacts\" as const}\n            >\n              <NavItem\n                data-plasmic-name={\"location\"}\n                data-plasmic-override={overrides.location}\n                className={classNames(\"__wab_instance\", sty.location)}\n                destination={\"https://g.page/Underhandbar?share\" as const}\n                icon={\n                  <LocationIcon\n                    className={classNames(defaultcss.all, sty.svg__bCi1O)}\n                    role={\"img\"}\n                  />\n                }\n                label={\n                  <div\n                    className={classNames(\n                      defaultcss.all,\n                      defaultcss.__wab_text,\n                      sty.text__e6FVf\n                    )}\n                  >\n                    {\"вул. Архітектора Ніколаєва, 7а\"}\n                  </div>\n                }\n              />\n\n              <NavItem\n                data-plasmic-name={\"phone\"}\n                data-plasmic-override={overrides.phone}\n                className={classNames(\"__wab_instance\", sty.phone)}\n                destination={\"tel:+380981763618\" as const}\n                icon={\n                  <PhonesvgIcon\n                    className={classNames(defaultcss.all, sty.svg__sjvL6)}\n                    role={\"img\"}\n                  />\n                }\n                label={\"+38 (098) 176 36 18\"}\n              />\n\n              <NavItem\n                data-plasmic-name={\"instagram\"}\n                data-plasmic-override={overrides.instagram}\n                className={classNames(\"__wab_instance\", sty.instagram)}\n                destination={\"https://instagram.com/underhand.bar\" as const}\n                icon={\n                  <Instagram2SvgIcon\n                    className={classNames(defaultcss.all, sty.svg__iiGr1)}\n                    role={\"img\"}\n                  />\n                }\n                label={\n                  <div\n                    className={classNames(\n                      defaultcss.all,\n                      defaultcss.__wab_text,\n                      sty.text__per0M\n                    )}\n                  >\n                    {\"@underhand.bar\"}\n                  </div>\n                }\n              />\n\n              <NavItem\n                data-plasmic-name={\"facebook\"}\n                data-plasmic-override={overrides.facebook}\n                className={classNames(\"__wab_instance\", sty.facebook)}\n                destination={\"https://www.facebook.com/underhand.bar\" as const}\n                icon={\n                  <FacebooksvgIcon\n                    className={classNames(defaultcss.all, sty.svg__f2Oj1)}\n                    role={\"img\"}\n                  />\n                }\n                label={\n                  <div\n                    className={classNames(\n                      defaultcss.all,\n                      defaultcss.__wab_text,\n                      sty.text__abEqo\n                    )}\n                  >\n                    {\"@underhand.bar\"}\n                  </div>\n                }\n              />\n\n              {false ? (\n                <NavItem\n                  data-plasmic-name={\"menu\"}\n                  data-plasmic-override={overrides.menu}\n                  className={classNames(\"__wab_instance\", sty.menu)}\n                  icon={\n                    <MenusvgIcon\n                      className={classNames(defaultcss.all, sty.svg__kfRtk)}\n                      role={\"img\"}\n                    />\n                  }\n                  label={\n                    <div\n                      className={classNames(\n                        defaultcss.all,\n                        defaultcss.__wab_text,\n                        sty.text__iq5Zr\n                      )}\n                    >\n                      {\"меню\"}\n                    </div>\n                  }\n                />\n              ) : null}\n              {false ? (\n                <NavItem\n                  data-plasmic-name={\"book2\"}\n                  data-plasmic-override={overrides.book2}\n                  className={classNames(\"__wab_instance\", sty.book2)}\n                  icon={\n                    <MenusvgIcon\n                      className={classNames(defaultcss.all, sty.svg__fsKm)}\n                      role={\"img\"}\n                    />\n                  }\n                  label={\n                    <div\n                      className={classNames(\n                        defaultcss.all,\n                        defaultcss.__wab_text,\n                        sty.text__qbttA\n                      )}\n                    >\n                      {\"забронювати стіл\"}\n                    </div>\n                  }\n                />\n              ) : null}\n              {false ? (\n                <NavItem\n                  data-plasmic-name={\"event\"}\n                  data-plasmic-override={overrides.event}\n                  className={classNames(\"__wab_instance\", sty.event)}\n                  icon={\n                    <MenusvgIcon\n                      className={classNames(defaultcss.all, sty.svg___82Fov)}\n                      role={\"img\"}\n                    />\n                  }\n                  label={\n                    <div\n                      className={classNames(\n                        defaultcss.all,\n                        defaultcss.__wab_text,\n                        sty.text__tLxku\n                      )}\n                    >\n                      {\"Замовити івент/тімбілдінг\"}\n                    </div>\n                  }\n                />\n              ) : null}\n              {false ? (\n                <NavItem\n                  data-plasmic-name={\"delivery2\"}\n                  data-plasmic-override={overrides.delivery2}\n                  className={classNames(\"__wab_instance\", sty.delivery2)}\n                  icon={\n                    <MenusvgIcon\n                      className={classNames(defaultcss.all, sty.svg__oKqHa)}\n                      role={\"img\"}\n                    />\n                  }\n                  label={\n                    <div\n                      className={classNames(\n                        defaultcss.all,\n                        defaultcss.__wab_text,\n                        sty.text__doPts\n                      )}\n                    >\n                      {\"замовити доставку\"}\n                    </div>\n                  }\n                />\n              ) : null}\n              {false ? (\n                <NavItem\n                  data-plasmic-name={\"partners\"}\n                  data-plasmic-override={overrides.partners}\n                  className={classNames(\"__wab_instance\", sty.partners)}\n                  icon={\n                    <MenusvgIcon\n                      className={classNames(defaultcss.all, sty.svg__vaa1G)}\n                      role={\"img\"}\n                    />\n                  }\n                  label={\n                    <div\n                      className={classNames(\n                        defaultcss.all,\n                        defaultcss.__wab_text,\n                        sty.text__tq18B\n                      )}\n                    >\n                      {\"Для партнерів\"}\n                    </div>\n                  }\n                />\n              ) : null}\n            </div>\n          ) : null}\n\n          <div\n            className={classNames(\n              defaultcss.all,\n              defaultcss.__wab_text,\n              sty.text__auAH\n            )}\n          >\n            {\"© Underhand 2021: Всі права захищені\"}\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  ) as React.ReactElement | null\n}\n\nconst PlasmicDescendants = {\n  root: [\n    \"root\",\n    \"header\",\n    \"mainNav\",\n    \"title\",\n    \"subtitle\",\n    \"contacts\",\n    \"location\",\n    \"phone\",\n    \"instagram\",\n    \"facebook\",\n    \"menu\",\n    \"book2\",\n    \"event\",\n    \"delivery2\",\n    \"partners\",\n  ],\n  header: [\"header\"],\n  mainNav: [\"mainNav\"],\n  title: [\"title\"],\n  subtitle: [\"subtitle\"],\n  contacts: [\n    \"contacts\",\n    \"location\",\n    \"phone\",\n    \"instagram\",\n    \"facebook\",\n    \"menu\",\n    \"book2\",\n    \"event\",\n    \"delivery2\",\n    \"partners\",\n  ],\n  location: [\"location\"],\n  phone: [\"phone\"],\n  instagram: [\"instagram\"],\n  facebook: [\"facebook\"],\n  menu: [\"menu\"],\n  book2: [\"book2\"],\n  event: [\"event\"],\n  delivery2: [\"delivery2\"],\n  partners: [\"partners\"],\n} as const\ntype NodeNameType = keyof typeof PlasmicDescendants\ntype DescendantsType<T extends NodeNameType> =\n  typeof PlasmicDescendants[T][number]\ntype NodeDefaultElementType = {\n  root: \"div\"\n  header: typeof Header\n  mainNav: typeof MobileNavigation\n  title: \"h1\"\n  subtitle: \"h1\"\n  contacts: \"div\"\n  location: typeof NavItem\n  phone: typeof NavItem\n  instagram: typeof NavItem\n  facebook: typeof NavItem\n  menu: typeof NavItem\n  book2: typeof NavItem\n  event: typeof NavItem\n  delivery2: typeof NavItem\n  partners: typeof NavItem\n}\n\ntype ReservedPropsType = \"variants\" | \"args\" | \"overrides\"\ntype NodeOverridesType<T extends NodeNameType> = Pick<\n  PlasmicHome__OverridesType,\n  DescendantsType<T>\n>\ntype NodeComponentProps<T extends NodeNameType> =\n  // Explicitly specify variants, args, and overrides as objects\n  {\n    variants?: PlasmicHome__VariantsArgs\n    args?: PlasmicHome__ArgsType\n    overrides?: NodeOverridesType<T>\n    dataFetches?: PlasmicHome__Fetches\n  } & Omit<PlasmicHome__VariantsArgs, ReservedPropsType> & // Specify variants directly as props\n    // Specify args directly as props\n    Omit<PlasmicHome__ArgsType, ReservedPropsType> &\n    // Specify overrides for each element directly as props\n    Omit<\n      NodeOverridesType<T>,\n      ReservedPropsType | VariantPropType | ArgPropType\n    > &\n    // Specify props for the root element\n    Omit<\n      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,\n      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>\n    >\n\nfunction makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {\n  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key }\n  const func = function <T extends PropsType>(\n    props: T & StrictProps<T, PropsType>\n  ) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicHome__ArgProps,\n      internalVariantPropNames: PlasmicHome__VariantProps,\n    })\n\n    const { dataFetches } = props\n\n    return PlasmicHome__RenderFunc({\n      variants,\n      args,\n      overrides,\n      dataFetches,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicHome\"\n  } else {\n    func.displayName = `PlasmicHome.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicHome = Object.assign(\n  // Top-level PlasmicHome renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    header: makeNodeComponent(\"header\"),\n    mainNav: makeNodeComponent(\"mainNav\"),\n    title: makeNodeComponent(\"title\"),\n    subtitle: makeNodeComponent(\"subtitle\"),\n    contacts: makeNodeComponent(\"contacts\"),\n    location: makeNodeComponent(\"location\"),\n    phone: makeNodeComponent(\"phone\"),\n    instagram: makeNodeComponent(\"instagram\"),\n    facebook: makeNodeComponent(\"facebook\"),\n    menu: makeNodeComponent(\"menu\"),\n    book2: makeNodeComponent(\"book2\"),\n    event: makeNodeComponent(\"event\"),\n    delivery2: makeNodeComponent(\"delivery2\"),\n    partners: makeNodeComponent(\"partners\"),\n\n    // Metadata about props expected for PlasmicHome\n    internalVariantProps: PlasmicHome__VariantProps,\n    internalArgProps: PlasmicHome__ArgProps,\n  }\n)\n\nexport default PlasmicHome\n/* prettier-ignore-end */\n","export default __webpack_public_path__ + \"static/ntbFeel-52279dc8287e31a90a5850a2631762c6.png\";","// This is a skeleton starter React page generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { ScreenVariantProvider } from \"../components/plasmic/underhand/PlasmicGlobalVariant__Screen\"\nimport { LanguageContext } from \"../components/plasmic/underhand/PlasmicGlobalVariant__Language\"\nimport { PlasmicHome } from \"../components/plasmic/underhand/PlasmicHome\"\n\nfunction Home() {\n  // Use PlasmicHome to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicHome are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, PlasmicHome is wrapped by your project's global\n  // variant context providers. These wrappers may be moved to\n  // Gatsby \"wrapRootElement\" function\n  // (https://www.gatsbyjs.com/docs/reference/config-files/gatsby-ssr#wrapRootElement).\n  return (\n    <LanguageContext.Provider value={undefined}>\n      <PlasmicHome />\n    </LanguageContext.Provider>\n  )\n}\n\nexport default Home\n","// extracted by mini-css-extract-plugin\nexport var all = \"plasmic__default_style-module--all--NwouX\";\nexport var img = \"plasmic__default_style-module--img--d4eRd plasmic__default_style-module--all--NwouX\";\nexport var span = \"plasmic__default_style-module--span--1OFCI plasmic__default_style-module--all--NwouX\";\nexport var input = \"plasmic__default_style-module--input--3z4EB plasmic__default_style-module--all--NwouX\";\nexport var textarea = \"plasmic__default_style-module--textarea--2n2Bv plasmic__default_style-module--all--NwouX\";\nexport var button = \"plasmic__default_style-module--button--2OAT1 plasmic__default_style-module--all--NwouX\";\nexport var code = \"plasmic__default_style-module--code--qrmDz plasmic__default_style-module--all--NwouX\";\nexport var pre = \"plasmic__default_style-module--pre--1HHC9 plasmic__default_style-module--all--NwouX\";\nexport var p = \"plasmic__default_style-module--p--21ftA plasmic__default_style-module--all--NwouX\";\nexport var h1 = \"plasmic__default_style-module--h1--qml5W plasmic__default_style-module--all--NwouX\";\nexport var h2 = \"plasmic__default_style-module--h2--3nLoH plasmic__default_style-module--all--NwouX\";\nexport var h3 = \"plasmic__default_style-module--h3--2ayUN plasmic__default_style-module--all--NwouX\";\nexport var h4 = \"plasmic__default_style-module--h4--1KNLF plasmic__default_style-module--all--NwouX\";\nexport var h5 = \"plasmic__default_style-module--h5--35CvV plasmic__default_style-module--all--NwouX\";\nexport var h6 = \"plasmic__default_style-module--h6--42pkB plasmic__default_style-module--all--NwouX\";\nexport var address = \"plasmic__default_style-module--address--3PB8K plasmic__default_style-module--all--NwouX\";\nexport var a = \"plasmic__default_style-module--a--30uxQ plasmic__default_style-module--all--NwouX\";\nexport var ol = \"plasmic__default_style-module--ol--2CtmU plasmic__default_style-module--all--NwouX\";\nexport var ul = \"plasmic__default_style-module--ul--3gvW3 plasmic__default_style-module--all--NwouX\";\nexport var select = \"plasmic__default_style-module--select--OgoL- plasmic__default_style-module--all--NwouX\";\nexport var li = \"plasmic__default_style-module--li--mJJH6 plasmic__default_style-module--all--NwouX\";\nexport var plasmic_default__component_wrapper = \"plasmic__default_style-module--plasmic_default__component_wrapper--37IPe\";\nexport var __wab_text = \"plasmic__default_style-module--__wab_text--2gtvC\";\nexport var plasmic_page_wrapper = \"plasmic__default_style-module--plasmic_page_wrapper--3NE1W\";","// extracted by mini-css-extract-plugin\nexport var root_reset = \"plasmic_underhand-module--root_reset--3kfk5\";","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["PlasmicHeader__VariantProps","Array","PlasmicHeader__ArgProps","PlasmicDescendants","root","logo","freeBox","makeNodeComponent","nodeName","func","props","deriveRenderOpts","name","descendantNames","internalArgPropNames","internalVariantPropNames","variants","args","overrides","forNode","dataFetches","className","classNames","defaultcss","projectcss","component","Link","href","platform","as","hasGap","role","PlasmicHeader__RenderFunc","displayName","PlasmicHeader","Object","assign","internalVariantProps","internalArgProps","Header_","ref","React","LanguageContext","useLanguage","style","title","restProps","xmlns","viewBox","height","width","fill","d","useScreenVariants","p","md","sm","lg","xl","PlasmicNavItem__VariantProps","PlasmicNavItem__ArgProps","ensureGlobalVariants","screen","destination","defaultContents","value","label","icon","PlasmicNavItem__RenderFunc","PlasmicNavItem","NavItem_","PlasmicMobileNavigation__VariantProps","PlasmicMobileNavigation__ArgProps","menu","menu3","label3","menu4","book","delivery","img","contacts","PlasmicMobileNavigation__RenderFunc","PlasmicMobileNavigation","MobileNavigation_","PlasmicSection__VariantProps","PlasmicSection__ArgProps","thumbnail","content","globalVariants","hasVariant","alt","contentFooter","PlasmicSection__RenderFunc","PlasmicSection","Section_","header","subtitle","freeBox__kfXle","img__s6CdJ","section___8Yd9Z","img___8PwXg","freeBox__zjVkR","freeBox__kvsPa","text__vv9K","text__xxtEj","text__bMrek","text___30FBs","navItem__aZklJ","text__qahQn","svg__tosrN","navItem__dDEp","text__jp1Sy","svg__gHc4V","text__b4T1C","section__zzxZ","img__aOdB","navItem__ndP4","text__bBtZx","svg___2Be7Q","navItem___00KTs","text__rRcda","svg__unC0D","text__hktQp","section__tymne","img___519DX","text__siNBn","navItem___8V7Tz","text__jtqRw","svg__fzhgz","text__w9LdL","text__e6FVf","svg__bCi1O","svg__sjvL6","instagram","text__per0M","svg__iiGr1","facebook","text__abEqo","svg__f2Oj1","text__auAH","version","x","y","xmlSpace","PlasmicHome__VariantProps","PlasmicHome__ArgProps","mainNav","location","phone","book2","event","delivery2","partners","language","sty","Header","id","src","introYicp3LgS","meetjpgZpDg6NFg","cocktailjpgRFdkfObjp","foodjpgN0XjTwSQv","PlasmicHome__RenderFunc","PlasmicHome","undefined","all","h1","h2","a","__wab_text","plasmic_page_wrapper","root_reset","_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","keys","length","indexOf"],"sourceRoot":""}