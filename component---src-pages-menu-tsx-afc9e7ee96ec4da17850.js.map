{"version":3,"file":"component---src-pages-menu-tsx-afc9e7ee96ec4da17850.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/plasmic/underhand/icons/PlasmicIcon__HamburgerNavigation.tsx","webpack://gatsby-starter-default/./src/components/plasmic/underhand/PlasmicHeader.tsx","webpack://gatsby-starter-default/./src/components/plasmic/underhand/PlasmicHeader.module.css","webpack://gatsby-starter-default/./src/components/Header.tsx","webpack://gatsby-starter-default/./src/components/plasmic/underhand/PlasmicGlobalVariant__Language.tsx","webpack://gatsby-starter-default/./src/components/plasmic/underhand/icons/PlasmicIcon__Facebooksvg.tsx","webpack://gatsby-starter-default/./src/components/plasmic/underhand/icons/PlasmicIcon__Instagram2Svg.tsx","webpack://gatsby-starter-default/./src/components/plasmic/underhand/PlasmicMenu.module.css","webpack://gatsby-starter-default/./src/components/plasmic/underhand/images/menuCocktails01102021Jpg.jpeg","webpack://gatsby-starter-default/./src/components/plasmic/underhand/images/menuBar01102021Jpg.jpeg","webpack://gatsby-starter-default/./src/components/plasmic/underhand/images/menuKitchen01102021Jpg.jpeg","webpack://gatsby-starter-default/./src/components/plasmic/underhand/PlasmicMenu.tsx","webpack://gatsby-starter-default/./src/pages/menu.tsx","webpack://gatsby-starter-default/./src/components/plasmic/plasmic__default_style.module.css","webpack://gatsby-starter-default/./src/components/plasmic/underhand/plasmic_underhand.module.css","webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport type HamburgerNavigationIconProps = React.ComponentProps<\"svg\"> & {\n  title?: string\n}\n\nexport function HamburgerNavigationIcon(props: HamburgerNavigationIconProps) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      viewBox={\"0 0 512 512\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      style={{\n        fill: \"currentcolor\",\n\n        ...(style || {}),\n      }}\n      className={classNames(\"plasmic-default__svg\", className)}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        d={\n          \"M492 236H20c-11.046 0-20 8.954-20 20s8.954 20 20 20h472c11.046 0 20-8.954 20-20s-8.954-20-20-20zm0-160H20C8.954 76 0 84.954 0 96s8.954 20 20 20h472c11.046 0 20-8.954 20-20s-8.954-20-20-20zm0 320H20c-11.046 0-20 8.954-20 20s8.954 20 20 20h472c11.046 0 20-8.954 20-20s-8.954-20-20-20z\"\n        }\n      ></path>\n    </svg>\n  )\n}\n\nexport default HamburgerNavigationIcon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: azVx9DM13tZbR2SGxpPJBW\n// Component: RwQZi7eZFd\nimport * as React from \"react\"\n\nimport { Link, GatsbyLinkProps as LinkProps } from \"gatsby\"\n\nimport * as p from \"@plasmicapp/react-web\"\n\nimport {\n  hasVariant,\n  classNames,\n  wrapWithClassName,\n  createPlasmicElementProxy,\n  makeFragment,\n  MultiChoiceArg,\n  SingleBooleanChoiceArg,\n  SingleChoiceArg,\n  pick,\n  omit,\n  useTrigger,\n  StrictProps,\n  deriveRenderOpts,\n  ensureGlobalVariants,\n} from \"@plasmicapp/react-web\"\n\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as defaultcss from \"../plasmic__default_style.module.css\" // plasmic-import: global/defaultcss\nimport * as projectcss from \"./plasmic_underhand.module.css\" // plasmic-import: azVx9DM13tZbR2SGxpPJBW/projectcss\nimport * as sty from \"./PlasmicHeader.module.css\" // plasmic-import: RwQZi7eZFd/css\n\nimport Instagram2SvgIcon from \"./icons/PlasmicIcon__Instagram2Svg\" // plasmic-import: 9tosiFRmf/icon\nimport FacebooksvgIcon from \"./icons/PlasmicIcon__Facebooksvg\" // plasmic-import: Flw25NYGX/icon\nimport HamburgerNavigationIcon from \"./icons/PlasmicIcon__HamburgerNavigation\" // plasmic-import: cwJrUItrF/icon\n\nexport type PlasmicHeader__VariantMembers = {}\n\nexport type PlasmicHeader__VariantsArgs = {}\ntype VariantPropType = keyof PlasmicHeader__VariantsArgs\nexport const PlasmicHeader__VariantProps = new Array<VariantPropType>()\n\nexport type PlasmicHeader__ArgsType = {}\ntype ArgPropType = keyof PlasmicHeader__ArgsType\nexport const PlasmicHeader__ArgProps = new Array<ArgPropType>()\n\nexport type PlasmicHeader__OverridesType = {\n  root?: p.Flex<\"div\">\n  logo?: p.Flex<\"div\">\n  freeBox?: p.Flex<\"div\">\n}\n\nexport interface DefaultHeaderProps {\n  className?: string\n}\n\nfunction PlasmicHeader__RenderFunc(props: {\n  variants: PlasmicHeader__VariantsArgs\n  args: PlasmicHeader__ArgsType\n  overrides: PlasmicHeader__OverridesType\n  dataFetches?: PlasmicHeader__Fetches\n  forNode?: string\n}) {\n  const { variants, args, overrides, forNode, dataFetches } = props\n\n  return (\n    <div\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      className={classNames(defaultcss.all, projectcss.root_reset, sty.root)}\n    >\n      <p.PlasmicLink\n        className={classNames(defaultcss.a, sty.link__gCtRw)}\n        component={Link}\n        href={\"/\" as const}\n        platform={\"gatsby\"}\n      >\n        <div\n          data-plasmic-name={\"logo\"}\n          data-plasmic-override={overrides.logo}\n          className={classNames(defaultcss.all, sty.logo)}\n        />\n      </p.PlasmicLink>\n\n      <p.Stack\n        as={\"div\"}\n        data-plasmic-name={\"freeBox\"}\n        data-plasmic-override={overrides.freeBox}\n        hasGap={true}\n        className={classNames(defaultcss.all, sty.freeBox)}\n      >\n        <p.PlasmicLink\n          className={classNames(defaultcss.a, sty.link__o6QJm)}\n          component={Link}\n          href={\"https://www.instagram.com/underhand.bar\" as const}\n          platform={\"gatsby\"}\n        >\n          <Instagram2SvgIcon\n            className={classNames(defaultcss.all, sty.svg__f34Sz)}\n            role={\"img\"}\n          />\n        </p.PlasmicLink>\n\n        <p.PlasmicLink\n          className={classNames(defaultcss.a, sty.link__tAoLp)}\n          component={Link}\n          href={\"https://www.facebook.com/underhand.bar\" as const}\n          platform={\"gatsby\"}\n        >\n          <FacebooksvgIcon\n            className={classNames(defaultcss.all, sty.svg__myvNy)}\n            role={\"img\"}\n          />\n        </p.PlasmicLink>\n      </p.Stack>\n\n      {false ? (\n        <p.PlasmicLink\n          className={classNames(defaultcss.a, sty.link__aeRgg)}\n          component={Link}\n          href={\"#navigation\" as const}\n          platform={\"gatsby\"}\n        >\n          <HamburgerNavigationIcon\n            className={classNames(defaultcss.all, sty.svg__jV1R)}\n            role={\"img\"}\n          />\n        </p.PlasmicLink>\n      ) : null}\n    </div>\n  ) as React.ReactElement | null\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"logo\", \"freeBox\"],\n  logo: [\"logo\"],\n  freeBox: [\"freeBox\"],\n} as const\ntype NodeNameType = keyof typeof PlasmicDescendants\ntype DescendantsType<T extends NodeNameType> =\n  typeof PlasmicDescendants[T][number]\ntype NodeDefaultElementType = {\n  root: \"div\"\n  logo: \"div\"\n  freeBox: \"div\"\n}\n\ntype ReservedPropsType = \"variants\" | \"args\" | \"overrides\"\ntype NodeOverridesType<T extends NodeNameType> = Pick<\n  PlasmicHeader__OverridesType,\n  DescendantsType<T>\n>\ntype NodeComponentProps<T extends NodeNameType> =\n  // Explicitly specify variants, args, and overrides as objects\n  {\n    variants?: PlasmicHeader__VariantsArgs\n    args?: PlasmicHeader__ArgsType\n    overrides?: NodeOverridesType<T>\n    dataFetches?: PlasmicHeader__Fetches\n  } & Omit<PlasmicHeader__VariantsArgs, ReservedPropsType> & // Specify variants directly as props\n    // Specify args directly as props\n    Omit<PlasmicHeader__ArgsType, ReservedPropsType> &\n    // Specify overrides for each element directly as props\n    Omit<\n      NodeOverridesType<T>,\n      ReservedPropsType | VariantPropType | ArgPropType\n    > &\n    // Specify props for the root element\n    Omit<\n      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,\n      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>\n    >\n\nfunction makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {\n  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key }\n  const func = function <T extends PropsType>(\n    props: T & StrictProps<T, PropsType>\n  ) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicHeader__ArgProps,\n      internalVariantPropNames: PlasmicHeader__VariantProps,\n    })\n\n    const { dataFetches } = props\n\n    return PlasmicHeader__RenderFunc({\n      variants,\n      args,\n      overrides,\n      dataFetches,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicHeader\"\n  } else {\n    func.displayName = `PlasmicHeader.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicHeader = Object.assign(\n  // Top-level PlasmicHeader renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    logo: makeNodeComponent(\"logo\"),\n    freeBox: makeNodeComponent(\"freeBox\"),\n\n    // Metadata about props expected for PlasmicHeader\n    internalVariantProps: PlasmicHeader__VariantProps,\n    internalArgProps: PlasmicHeader__ArgProps,\n  }\n)\n\nexport default PlasmicHeader\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var root = \"PlasmicHeader-module--root--34_yZ\";\nexport var link__gCtRw = \"PlasmicHeader-module--link__gCtRw--yrD4L\";\nexport var logo = \"PlasmicHeader-module--logo--3xt6p\";\nexport var freeBox = \"PlasmicHeader-module--freeBox--3Fv0b\";\nexport var link__o6QJm = \"PlasmicHeader-module--link__o6QJm--1dyLI\";\nexport var svg__f34Sz = \"PlasmicHeader-module--svg__f34Sz--3yKrj\";\nexport var link__tAoLp = \"PlasmicHeader-module--link__tAoLp--2jnLB\";\nexport var svg__myvNy = \"PlasmicHeader-module--svg__myvNy--255vM\";\nexport var link__aeRgg = \"PlasmicHeader-module--link__aeRgg--20ZEZ\";\nexport var svg__jV1R = \"PlasmicHeader-module--svg__jV1R--1xqLT\";","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport {\n  PlasmicHeader,\n  DefaultHeaderProps,\n} from \"./plasmic/underhand/PlasmicHeader\"\nimport { HTMLElementRefOf } from \"@plasmicapp/react-web\"\n\n// Your component props start with props for variants and slots you defined\n// in Plasmic, but you can add more here, like event handlers that you can\n// attach to named nodes in your component.\n//\n// If you don't want to expose certain variants or slots as a prop, you can use\n// Omit to hide them:\n//\n// interface HeaderProps extends Omit<DefaultHeaderProps, \"hideProps1\"|\"hideProp2\"> {\n//   // etc.\n// }\n//\n// You can also stop extending from DefaultHeaderProps altogether and have\n// total control over the props for your component.\ninterface HeaderProps extends DefaultHeaderProps {}\n\nfunction Header_(props: HeaderProps, ref: HTMLElementRefOf<\"div\">) {\n  // Use PlasmicHeader to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicHeader are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all HeaderProps here, but feel free\n  // to do whatever works for you.\n\n  return <PlasmicHeader root={{ ref }} {...props} />\n}\n\nconst Header = React.forwardRef(Header_)\nexport default Header\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\nexport type LanguageValue = \"ru\" | \"en\"\nexport const LanguageContext = React.createContext<LanguageValue | undefined>(\n  \"PLEASE_RENDER_INSIDE_PROVIDER\" as any\n)\n\nexport function useLanguage() {\n  return React.useContext(LanguageContext)\n}\n\nexport default LanguageContext\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport type FacebooksvgIconProps = React.ComponentProps<\"svg\"> & {\n  title?: string\n}\n\nexport function FacebooksvgIcon(props: FacebooksvgIconProps) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      viewBox={\"0 0 508 508\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      style={{\n        fill: \"currentcolor\",\n\n        ...(style || {}),\n      }}\n      className={classNames(\"plasmic-default__svg\", className)}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        d={\n          \"M329.744 187.804a4.004 4.004 0 00-2.952-1.3h-44.984V166.66c0-10.988 7.024-11.84 9.176-11.84h34.444c2.208 0 4-1.792 4-4V98.212a3.998 3.998 0 00-3.984-4l-48.82-.196c-51.816 0-70.276 35.844-70.276 69.388v23.104h-23.776c-2.208 0-4 1.792-4 4V254c0 2.208 1.792 4 4 4h27.748v150.76c0 2.208 1.792 4 4 4h59.52c2.208 0 4-1.788 4-4v-35.716c0-2.208-1.792-4-4-4s-4 1.792-4 4v31.716h-51.52V254c0-2.208-1.792-4-4-4h-27.748v-55.488h23.776c2.208 0 4-1.792 4-4v-27.104c0-58.428 51.876-61.388 62.26-61.388l44.82.18v44.624h-30.444c-8.548 0-17.176 6.136-17.176 19.84v23.844c0 2.208 1.792 4 4 4h44.612L317.448 250H273.84c-2.208 0-4 1.792-4 4v51.588c0 2.208 1.792 4 4 4s4-1.792 4-4V258h43.264c2.072 0 3.8-1.58 3.984-3.648l5.688-63.492a3.989 3.989 0 00-1.032-3.056z\"\n        }\n      ></path>\n\n      <path\n        d={\n          \"M378.764 0H129.18C57.952 0 0 57.964 0 129.212v249.576C0 450.036 57.952 508 129.18 508h249.584C450.024 508 508 450.036 508 378.788V129.212C508 57.964 450.024 0 378.764 0zM500 378.788C500 445.624 445.612 500 378.764 500H129.18C62.36 500 8 445.624 8 378.788V129.212C8 62.376 62.36 8 129.18 8h249.584C445.616 8 500 62.376 500 129.212v249.576z\"\n        }\n      ></path>\n\n      <path\n        d={\n          \"M480.192 253.968c-2.208 0-4 1.792-4 4v112.02c0 57.568-48.632 106.204-106.2 106.204H138.004c-57.564 0-106.196-48.636-106.196-106.204V138c0-57.564 48.632-106.192 106.196-106.188H369.08c2.208 0 4-1.792 4-4s-1.792-4-4-4H138.004c-61.9 0-114.196 52.292-114.196 114.188v231.988c0 61.904 52.296 114.204 114.196 114.204h231.988c61.904 0 114.2-52.3 114.2-114.208V257.968c0-2.208-1.792-4-4-4z\"\n        }\n      ></path>\n\n      <path\n        d={\n          \"M449.808 58.188c-21.848-21.848-51.272-34.38-80.732-34.38-2.208 0-4 1.792-4 4s1.792 4 4 4c27.356 0 54.72 11.676 75.076 32.036.78.78 1.804 1.172 2.828 1.172s2.048-.392 2.828-1.172a3.996 3.996 0 000-5.656zm30.384 108.48c-2.208 0-4 1.792-4 4v59.524c0 2.208 1.792 4 4 4s4-1.792 4-4v-59.524c0-2.208-1.792-4-4-4z\"\n        }\n      ></path>\n    </svg>\n  )\n}\n\nexport default FacebooksvgIcon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport type Instagram2SvgIconProps = React.ComponentProps<\"svg\"> & {\n  title?: string\n}\n\nexport function Instagram2SvgIcon(props: Instagram2SvgIconProps) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      viewBox={\"0 0 508 508\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      style={{\n        fill: \"currentcolor\",\n\n        ...(style || {}),\n      }}\n      className={classNames(\"plasmic-default__svg\", className)}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        d={\n          \"M378.756 0h-249.58C57.948 0 0 57.964 0 129.216v249.572C0 450.036 57.948 508 129.176 508h249.58C450.02 508 508 450.036 508 378.792V129.216C508 57.964 450.02 0 378.756 0zM500 378.792c0 66.836-54.392 121.212-121.244 121.212h-249.58C62.36 500.004 8 445.628 8 378.792V129.216C8 62.376 62.36 8 129.176 8h249.58C445.612 8 500 62.376 500 129.216v249.576z\"\n        }\n      ></path>\n\n      <path\n        d={\n          \"M480.192 253.968c-2.208 0-4 1.792-4 4v112.024c0 57.568-48.632 106.2-106.2 106.2H138.004c-57.564 0-106.196-48.632-106.196-106.2V138.008c0-57.568 48.632-106.2 106.196-106.2H369.08c2.208 0 4-1.792 4-4s-1.792-4-4-4H138.004c-61.9 0-114.196 52.296-114.196 114.2v231.984c0 61.904 52.296 114.2 114.196 114.2h231.988c61.904 0 114.2-52.296 114.2-114.2V257.968c0-2.208-1.792-4-4-4z\"\n        }\n      ></path>\n\n      <path\n        d={\n          \"M449.808 58.188c-21.852-21.848-51.28-34.38-80.732-34.38-2.208 0-4 1.792-4 4s1.792 4 4 4c27.348 0 54.712 11.676 75.076 32.036.78.78 1.804 1.172 2.828 1.172s2.048-.392 2.828-1.172a3.996 3.996 0 000-5.656zm30.384 108.48c-2.208 0-4 1.792-4 4v59.524c0 2.208 1.792 4 4 4s4-1.792 4-4v-59.524c0-2.208-1.792-4-4-4zm-178.424 52.988c-11.112-15.372-28.976-24.548-47.776-24.548-18.788 0-36.644 9.176-47.764 24.552-7.292 10.12-11.148 22-11.148 34.348 0 32.48 26.428 58.9 58.912 58.9 32.496 0 58.928-26.424 58.928-58.896 0-12.324-3.852-24.2-11.152-34.356zm-47.776 85.252c-28.072 0-50.912-22.832-50.912-50.9 0-10.66 3.332-20.92 9.636-29.668 9.612-13.3 25.044-21.236 41.276-21.236 16.244 0 31.676 7.94 41.284 21.228 6.312 8.776 9.644 19.036 9.644 29.676 0 28.068-22.844 50.9-50.928 50.9z\"\n        }\n      ></path>\n\n      <path\n        d={\n          \"M380.984 218.252h-47.976c-1.388 0-2.68.72-3.408 1.904a4.005 4.005 0 00-.16 3.904c3.56 7.04 5.86 18.844 5.86 30.08 0 44.792-36.476 81.232-81.308 81.232-44.828 0-81.3-36.428-81.3-81.2 0-11.288 2.296-23.108 5.852-30.108a4.004 4.004 0 00-.156-3.904 4.012 4.012 0 00-3.412-1.908h-47.96c-2.208 0-4 1.792-4 4v127.456c0 18.792 16.484 35.276 35.28 35.276h191.392c18.804 0 35.296-16.484 35.296-35.28V222.252c0-2.208-1.792-4-4-4zm-4 131.452c0 14.276-13.008 27.276-27.296 27.276H158.296c-14.276 0-27.28-13-27.28-27.276V226.256h37.972c-2.7 7.836-4.296 17.964-4.296 27.916 0 49.184 40.06 89.2 89.3 89.2 49.244 0 89.308-40.028 89.308-89.232 0-9.916-1.6-20.032-4.308-27.888h37.992v123.452zm-1.116-218.588c-.756-.752-1.72-.992-2.844-1.164l-52.244.18a4.002 4.002 0 00-3.988 3.992l-.12 52.868a3.994 3.994 0 004 4.008h.012l52.376-.188a3.999 3.999 0 003.988-4v-52.86a3.999 3.999 0 00-1.18-2.836zm-6.824 51.712l-44.364.16.104-44.868 44.26-.144v44.852z\"\n        }\n      ></path>\n\n      <path\n        d={\n          \"M408.764 250c-2.208 0-4 1.792-4 4v95.708c0 30.872-24.192 55.056-55.076 55.056H158.296c-30.876 0-55.06-24.184-55.06-55.056V158.3c0-30.88 24.188-55.064 55.06-55.064h191.392c31.224 0 55.684 24.452 55.684 55.672 0 2.208 1.792 4 4 4s4-1.792 4-4c0-35.704-27.972-63.672-63.684-63.672H158.296c-35.36 0-63.06 27.704-63.06 63.064v191.404c0 35.36 27.7 63.056 63.06 63.056h191.392c35.368 0 63.072-27.692 63.076-63.052V254c0-2.208-1.792-4-4-4z\"\n        }\n      ></path>\n    </svg>\n  )\n}\n\nexport default Instagram2SvgIcon\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var root = \"PlasmicMenu-module--root--2qnPZ\";\nexport var header = \"PlasmicMenu-module--header--3VcYm\";\nexport var freeBox = \"PlasmicMenu-module--freeBox--1nBew\";\nexport var img___6KXgK = \"PlasmicMenu-module--img___6KXgK--2hBIH\";\nexport var __wab_imgSpacer = \"PlasmicMenu-module--__wab_img-spacer--bUf3o\";\nexport var img__umBTp = \"PlasmicMenu-module--img__umBTp--17ms1\";\nexport var img__d3BhL = \"PlasmicMenu-module--img__d3BhL--12YP-\";","export default __webpack_public_path__ + \"static/menuCocktails01102021Jpg-70cd5c5676c2967c91e100d8156e293b.jpeg\";","export default __webpack_public_path__ + \"static/menuBar01102021Jpg-420df88d26fe422f47350f51e64b4826.jpeg\";","export default __webpack_public_path__ + \"static/menuKitchen01102021Jpg-c04f4c9afe6cf09c689b4c77b194c462.jpeg\";","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: azVx9DM13tZbR2SGxpPJBW\n// Component: KLJ3eYMzM6\nimport * as React from \"react\"\n\nimport { Link, GatsbyLinkProps as LinkProps } from \"gatsby\"\n\nimport * as p from \"@plasmicapp/react-web\"\n\nimport {\n  hasVariant,\n  classNames,\n  wrapWithClassName,\n  createPlasmicElementProxy,\n  makeFragment,\n  MultiChoiceArg,\n  SingleBooleanChoiceArg,\n  SingleChoiceArg,\n  pick,\n  omit,\n  useTrigger,\n  StrictProps,\n  deriveRenderOpts,\n  ensureGlobalVariants,\n} from \"@plasmicapp/react-web\"\nimport Header from \"../../Header\" // plasmic-import: RwQZi7eZFd/component\n\nimport { LanguageValue, useLanguage } from \"./PlasmicGlobalVariant__Language\" // plasmic-import: IK06cfUF8p/globalVariant\n\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as defaultcss from \"../plasmic__default_style.module.css\" // plasmic-import: global/defaultcss\nimport * as projectcss from \"./plasmic_underhand.module.css\" // plasmic-import: azVx9DM13tZbR2SGxpPJBW/projectcss\nimport * as sty from \"./PlasmicMenu.module.css\" // plasmic-import: KLJ3eYMzM6/css\n\nimport menuCocktails01102021JpgZcMwxW6Oo from \"./images/menuCocktails01102021Jpg.jpeg\" // plasmic-import: ZcMwxW6OO/picture\nimport menuBar01102021JpgMzo5Sbq1U from \"./images/menuBar01102021Jpg.jpeg\" // plasmic-import: Mzo5Sbq1u/picture\nimport menuKitchen01102021JpgMiBa7Aa3B from \"./images/menuKitchen01102021Jpg.jpeg\" // plasmic-import: MiBA7AA3b/picture\n\nexport type PlasmicMenu__VariantMembers = {}\n\nexport type PlasmicMenu__VariantsArgs = {}\ntype VariantPropType = keyof PlasmicMenu__VariantsArgs\nexport const PlasmicMenu__VariantProps = new Array<VariantPropType>()\n\nexport type PlasmicMenu__ArgsType = {}\ntype ArgPropType = keyof PlasmicMenu__ArgsType\nexport const PlasmicMenu__ArgProps = new Array<ArgPropType>()\n\nexport type PlasmicMenu__OverridesType = {\n  root?: p.Flex<\"div\">\n  header?: p.Flex<typeof Header>\n  freeBox?: p.Flex<\"div\">\n}\n\nexport interface DefaultMenuProps {\n  className?: string\n}\n\nfunction PlasmicMenu__RenderFunc(props: {\n  variants: PlasmicMenu__VariantsArgs\n  args: PlasmicMenu__ArgsType\n  overrides: PlasmicMenu__OverridesType\n  dataFetches?: PlasmicMenu__Fetches\n  forNode?: string\n}) {\n  const { variants, args, overrides, forNode, dataFetches } = props\n\n  const globalVariants = ensureGlobalVariants({\n    language: useLanguage(),\n  })\n\n  return (\n    <React.Fragment>\n      {}\n\n      <style>{`\n        body {\n          margin: 0;\n        }\n      `}</style>\n\n      <div className={defaultcss.plasmic_page_wrapper}>\n        <div\n          data-plasmic-name={\"root\"}\n          data-plasmic-override={overrides.root}\n          data-plasmic-root={true}\n          data-plasmic-for-node={forNode}\n          className={classNames(\n            defaultcss.all,\n            projectcss.root_reset,\n            sty.root,\n            {\n              [sty.root__global_language_en]: hasVariant(\n                globalVariants,\n                \"language\",\n                \"en\"\n              ),\n              [sty.root__global_language_ru]: hasVariant(\n                globalVariants,\n                \"language\",\n                \"ru\"\n              ),\n            }\n          )}\n        >\n          <Header\n            data-plasmic-name={\"header\"}\n            data-plasmic-override={overrides.header}\n            className={classNames(\"__wab_instance\", sty.header)}\n          />\n\n          <div\n            data-plasmic-name={\"freeBox\"}\n            data-plasmic-override={overrides.freeBox}\n            className={classNames(defaultcss.all, sty.freeBox)}\n          >\n            <img\n              alt={\"\"}\n              className={classNames(defaultcss.img, sty.img___6KXgK)}\n              src={menuCocktails01102021JpgZcMwxW6Oo}\n            />\n\n            <img\n              alt={\"\"}\n              className={classNames(defaultcss.img, sty.img__umBTp)}\n              src={menuBar01102021JpgMzo5Sbq1U}\n            />\n\n            <img\n              alt={\"\"}\n              className={classNames(defaultcss.img, sty.img__d3BhL)}\n              src={menuKitchen01102021JpgMiBa7Aa3B}\n            />\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  ) as React.ReactElement | null\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"header\", \"freeBox\"],\n  header: [\"header\"],\n  freeBox: [\"freeBox\"],\n} as const\ntype NodeNameType = keyof typeof PlasmicDescendants\ntype DescendantsType<T extends NodeNameType> =\n  typeof PlasmicDescendants[T][number]\ntype NodeDefaultElementType = {\n  root: \"div\"\n  header: typeof Header\n  freeBox: \"div\"\n}\n\ntype ReservedPropsType = \"variants\" | \"args\" | \"overrides\"\ntype NodeOverridesType<T extends NodeNameType> = Pick<\n  PlasmicMenu__OverridesType,\n  DescendantsType<T>\n>\ntype NodeComponentProps<T extends NodeNameType> =\n  // Explicitly specify variants, args, and overrides as objects\n  {\n    variants?: PlasmicMenu__VariantsArgs\n    args?: PlasmicMenu__ArgsType\n    overrides?: NodeOverridesType<T>\n    dataFetches?: PlasmicMenu__Fetches\n  } & Omit<PlasmicMenu__VariantsArgs, ReservedPropsType> & // Specify variants directly as props\n    // Specify args directly as props\n    Omit<PlasmicMenu__ArgsType, ReservedPropsType> &\n    // Specify overrides for each element directly as props\n    Omit<\n      NodeOverridesType<T>,\n      ReservedPropsType | VariantPropType | ArgPropType\n    > &\n    // Specify props for the root element\n    Omit<\n      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,\n      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>\n    >\n\nfunction makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {\n  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key }\n  const func = function <T extends PropsType>(\n    props: T & StrictProps<T, PropsType>\n  ) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicMenu__ArgProps,\n      internalVariantPropNames: PlasmicMenu__VariantProps,\n    })\n\n    const { dataFetches } = props\n\n    return PlasmicMenu__RenderFunc({\n      variants,\n      args,\n      overrides,\n      dataFetches,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicMenu\"\n  } else {\n    func.displayName = `PlasmicMenu.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicMenu = Object.assign(\n  // Top-level PlasmicMenu renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    header: makeNodeComponent(\"header\"),\n    freeBox: makeNodeComponent(\"freeBox\"),\n\n    // Metadata about props expected for PlasmicMenu\n    internalVariantProps: PlasmicMenu__VariantProps,\n    internalArgProps: PlasmicMenu__ArgProps,\n  }\n)\n\nexport default PlasmicMenu\n/* prettier-ignore-end */\n","// This is a skeleton starter React page generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { ScreenVariantProvider } from \"../components/plasmic/underhand/PlasmicGlobalVariant__Screen\"\nimport { LanguageContext } from \"../components/plasmic/underhand/PlasmicGlobalVariant__Language\"\nimport { PlasmicMenu } from \"../components/plasmic/underhand/PlasmicMenu\"\n\nfunction Menu() {\n  // Use PlasmicMenu to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicMenu are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, PlasmicMenu is wrapped by your project's global\n  // variant context providers. These wrappers may be moved to\n  // Gatsby \"wrapRootElement\" function\n  // (https://www.gatsbyjs.com/docs/reference/config-files/gatsby-ssr#wrapRootElement).\n  return (\n    <LanguageContext.Provider value={undefined}>\n      <PlasmicMenu />\n    </LanguageContext.Provider>\n  )\n}\n\nexport default Menu\n","// extracted by mini-css-extract-plugin\nexport var all = \"plasmic__default_style-module--all--NwouX\";\nexport var img = \"plasmic__default_style-module--img--d4eRd plasmic__default_style-module--all--NwouX\";\nexport var span = \"plasmic__default_style-module--span--1OFCI plasmic__default_style-module--all--NwouX\";\nexport var input = \"plasmic__default_style-module--input--3z4EB plasmic__default_style-module--all--NwouX\";\nexport var textarea = \"plasmic__default_style-module--textarea--2n2Bv plasmic__default_style-module--all--NwouX\";\nexport var button = \"plasmic__default_style-module--button--2OAT1 plasmic__default_style-module--all--NwouX\";\nexport var code = \"plasmic__default_style-module--code--qrmDz plasmic__default_style-module--all--NwouX\";\nexport var pre = \"plasmic__default_style-module--pre--1HHC9 plasmic__default_style-module--all--NwouX\";\nexport var p = \"plasmic__default_style-module--p--21ftA plasmic__default_style-module--all--NwouX\";\nexport var h1 = \"plasmic__default_style-module--h1--qml5W plasmic__default_style-module--all--NwouX\";\nexport var h2 = \"plasmic__default_style-module--h2--3nLoH plasmic__default_style-module--all--NwouX\";\nexport var h3 = \"plasmic__default_style-module--h3--2ayUN plasmic__default_style-module--all--NwouX\";\nexport var h4 = \"plasmic__default_style-module--h4--1KNLF plasmic__default_style-module--all--NwouX\";\nexport var h5 = \"plasmic__default_style-module--h5--35CvV plasmic__default_style-module--all--NwouX\";\nexport var h6 = \"plasmic__default_style-module--h6--42pkB plasmic__default_style-module--all--NwouX\";\nexport var address = \"plasmic__default_style-module--address--3PB8K plasmic__default_style-module--all--NwouX\";\nexport var a = \"plasmic__default_style-module--a--30uxQ plasmic__default_style-module--all--NwouX\";\nexport var ol = \"plasmic__default_style-module--ol--2CtmU plasmic__default_style-module--all--NwouX\";\nexport var ul = \"plasmic__default_style-module--ul--3gvW3 plasmic__default_style-module--all--NwouX\";\nexport var select = \"plasmic__default_style-module--select--OgoL- plasmic__default_style-module--all--NwouX\";\nexport var li = \"plasmic__default_style-module--li--mJJH6 plasmic__default_style-module--all--NwouX\";\nexport var plasmic_default__component_wrapper = \"plasmic__default_style-module--plasmic_default__component_wrapper--37IPe\";\nexport var __wab_text = \"plasmic__default_style-module--__wab_text--2gtvC\";\nexport var plasmic_page_wrapper = \"plasmic__default_style-module--plasmic_page_wrapper--3NE1W\";","// extracted by mini-css-extract-plugin\nexport var root_reset = \"plasmic_underhand-module--root_reset--3kfk5\";","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["PlasmicHeader__VariantProps","Array","PlasmicHeader__ArgProps","PlasmicDescendants","root","logo","freeBox","makeNodeComponent","nodeName","func","props","deriveRenderOpts","name","descendantNames","internalArgPropNames","internalVariantPropNames","variants","args","overrides","forNode","dataFetches","className","classNames","defaultcss","projectcss","component","Link","href","platform","as","hasGap","role","PlasmicHeader__RenderFunc","displayName","PlasmicHeader","Object","assign","internalVariantProps","internalArgProps","Header_","ref","React","LanguageContext","useLanguage","style","title","restProps","xmlns","viewBox","height","width","fill","d","header","img___6KXgK","img__umBTp","img__d3BhL","PlasmicMenu__VariantProps","PlasmicMenu__ArgProps","globalVariants","ensureGlobalVariants","language","sty","hasVariant","Header","alt","src","menuCocktails01102021JpgZcMwxW6Oo","menuBar01102021JpgMzo5Sbq1U","menuKitchen01102021JpgMiBa7Aa3B","PlasmicMenu__RenderFunc","PlasmicMenu","value","undefined","all","img","h1","h2","a","__wab_text","plasmic_page_wrapper","root_reset","_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","keys","length","indexOf"],"sourceRoot":""}